openapi: 3.0.1
info:
  title: Extract Resource Manager API
  description: API definition for Extract Resource Manager microservice.
  version: 4.0.0-SNAPSHOT
servers:
- url: http://localhost:8080
  description: Generated server url
security:
  - bearerToken: [] 
tags:
  - name: timetrace
    description: Endpoints for timetraces CRUD operations
  - name: operation
    description: Endpoints for operation entity
  - name: doctypeConfiguration
    description: Endpoints for document configuration operations
  - name: datapoint-consolidation
    description: Endpoints for datapoint-consolidation entity
  - name: dump
    description: Endpoints for export / import operations
  - name: ocr-params-details
    description: Endpoints for ocr params template
  - name: resource
    description: Endpoints for resource
  - name: consolidation
    description: The main consolidation resources endpoints
  - name: ocr-params
    description: Endpoints for ocr params
  - name: datapoint-type
    description: Endpoints for datapoint-type entity
paths:
  /api/resource/result/{identifier}:
    get:
      tags:
      - resource
      summary: Get resource by id with only the extracted data and basic metadata
      description: Get resource by id with only the extracted data and basic metadata
      operationId: getResult
      parameters:
      - name: identifier
        in: path
        description: Identifier of resource
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/{identifier}:
    get:
      tags:
      - resource
      summary: Get resource by id
      description: Get resource by id
      operationId: get_1
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
    delete:
      tags:
      - resource
      summary: Delete resource by id
      description: Delete resource by id
      operationId: deleteResource
      parameters:
      - name: identifier
        in: path
        description: Resource identifier
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The resource was deleted successfully
  /api/corpus/resource/{identifier}:
    get:
      tags:
      - resource
      summary: Get corpus resource by id
      description: Get corpus resource by id and delete it(optional)
      operationId: getCorpus
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
    delete:
      tags:
      - resource
      summary: Delete corpus resource by id
      description: Delete corpus resource by id
      operationId: deleteCorpusResource
      parameters:
      - name: identifier
        in: path
        description: Corpus identifier
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The resources were deleted successfully
  /api/nlp/resource/{identifier}:
    delete:
      tags:
      - resource
      summary: Delete nlp resource by id
      description: Delete nlp resource by id
      operationId: deleteNLPResource
      parameters:
      - name: identifier
        in: path
        description: Corpus identifier
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The nlp resource was deleted successfully
  /api/corpus/resource/index:
    post:
      tags:
      - resource
      summary: Create a corpus resource
      description: Create a corpus resource
      operationId: indexCorpus
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The corpus resource was inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/hash/{md5Hash}:
    get:
      tags:
      - resource
      summary: Get resource by md5hash
      description: Get resource by md5hash
      operationId: getResourcesByHash
      parameters:
      - name: md5Hash
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/validated/{hash}:
    get:
      tags:
      - resource
      summary: Get first validated resource by md5Hash
      description: Get first validated resource by md5Hash
      operationId: getValidatedByHash
      parameters:
      - name: hash
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/nlp/resource/index:
    post:
      tags:
      - resource
      summary: Create a nlp resource
      description: Create a nlp resource
      operationId: indexNLP
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The nlp resource was inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/dto/update:
    put:
      tags:
      - resource
      summary: Update a resource (dto)
      description: Update a resource (dto)
      operationId: updateDTO
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResourceDTO'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The resource was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDTO'
  /api/corpus/resource/update:
    put:
      tags:
      - resource
      summary: Update a corpus resource
      description: Update a corpus resource
      operationId: updateDTO_1
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The corpus resource was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/nlp/resource/update:
    put:
      tags:
      - resource
      summary: Update a nlp resource
      description: Update a nlp resource
      operationId: updateNLP
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The corpus resource was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/dto/{identifier}:
    get:
      tags:
      - resource
      summary: Get resource by id (dto)
      description: Get resource by id (dto)
      operationId: get
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDTO'
  /api/get-resources-from-operation/{operationId}:
    get:
      tags:
      - resource
      summary: Get resources from operation
      description: Get resources from operation by operation ida
      operationId: getResourcesFromOperation
      parameters:
      - name: operationId
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/corpus/resourcesOfStageType/{stageType}/{stageSubtype}:
    get:
      tags:
      - resource
      summary: Get corpus resources by stage (type and subtype)
      description: Get corpus resources by stage (type and subtype)
      operationId: getResourcesOfStageType
      parameters:
      - name: stageType
        in: path
        required: true
        schema:
          type: string
      - name: stageSubtype
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/get-resources/pagination/{docType}/{subType}/{size}/{from}:
    get:
      tags:
      - resource
      summary: Get resources by stage (type and subtype) with pagination
      description: Get resources by stage (type and subtype) with pagination
      operationId: getResourcesPaginate
      parameters:
      - name: docType
        in: path
        required: true
        schema:
          type: string
      - name: subType
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: from
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/get-all-subtypes:
    get:
      tags:
      - resource
      summary: Get all subtypes by from corpus index
      description: Get all subtypes by from corpus index
      operationId: getAllSubtypesFromResources
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: string
  /api/report/resources:
    get:
      tags:
      - resource
      summary: Get report resources
      description: Get a list of report resources
      operationId: getReportResources
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 1
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dt
        in: query
        required: false
        schema:
          type: string
      - name: ds
        in: query
        required: false
        schema:
          type: string
      - name: dc
        in: query
        required: false
        schema:
          type: string
      - name: dl
        in: query
        required: false
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/report/resources/scroll/{scrollId}:
    get:
      tags:
      - resource
      summary: Get report resources scroll
      description: Get report resources scroll
      operationId: getReportResourcesScroll
      parameters:
      - name: scrollId
        in: path
        required: true
        schema:
          type: string
      - name: scrollTime
        in: query
        required: false
        schema:
          type: string
          default: 5m
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrollResponse'
  /api/report/resources/scroll:
    get:
      tags:
      - resource
      summary: Get report resources scroll
      description: Get elasticsearch scroll of report resources
      operationId: getReportResourcesScroll_1
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dt
        in: query
        required: false
        schema:
          type: string
      - name: ds
        in: query
        required: false
        schema:
          type: string
      - name: dc
        in: query
        required: false
        schema:
          type: string
      - name: dl
        in: query
        required: false
        schema:
          type: string
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scrollTime
        in: query
        required: false
        schema:
          type: string
          default: 5m
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrollResponse'
  /api/report/corpus/resources:
    get:
      tags:
      - resource
      summary: Get report corpus resources
      description: Get a list of report resources with pagination
      operationId: getReportResources_1
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 1
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dt
        in: query
        required: false
        schema:
          type: string
      - name: ds
        in: query
        required: false
        schema:
          type: string
      - name: dc
        in: query
        required: false
        schema:
          type: string
      - name: dl
        in: query
        required: false
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/report/corpus/resources/scroll:
    get:
      tags:
      - resource
      summary: Get report corpus resources scroll
      description: Get report corpus resources scroll
      operationId: getReportCorpusResourcesScroll
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dt
        in: query
        required: false
        schema:
          type: string
      - name: ds
        in: query
        required: false
        schema:
          type: string
      - name: dc
        in: query
        required: false
        schema:
          type: string
      - name: dl
        in: query
        required: false
        schema:
          type: string
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scrollTime
        in: query
        required: false
        schema:
          type: string
          default: 5m
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrollResponse'
  /api/report/corpus/resources/scroll/{scrollId}:
    get:
      tags:
      - resource
      summary: Get report corpus resources by scroll id
      description: Get report corpus resources by scroll id
      operationId: getReportCorpusResourcesScroll_1
      parameters:
      - name: scrollId
        in: path
        required: true
        schema:
          type: string
      - name: scrollTime
        in: query
        required: false
        schema:
          type: string
          default: 5m
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrollResponse'
  /api/corpus/resources/{docType}/{subType}:
    post:
      tags:
      - resource
      summary: Get resources from corpus by ids
      description: Get resources from corpus by ids
      operationId: index
      parameters:
      - name: docType
        in: path
        required: true
        schema:
          type: string
      - name: subType
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/resource/status/{identifier}:
    get:
      tags:
      - resource
      summary: Get resource status
      description: Get resource status
      operationId: getStatus
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /api/resource/index:
    post:
      tags:
      - resource
      summary: Create a resource
      description: Create a resource
      operationId: index_1
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The resource was inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/update:
    put:
      tags:
      - resource
      summary: Update a resource
      description: Update a resource
      operationId: update
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The resource was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  
    get:
      operationId: getActiveProfiles
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileInfoResponse'
components:
  schemas:
    ErrorIM:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp when the error occured
          format: date-time
        errorCode:
          pattern: ^\d{4}-\d{3}$
          type: string
          description: |-
            Error code. The error codes are formed with the following structure:
            <service code>-<specific error code>
            For example: 8002-404 means there was an error in pipeline executor (8002) caused by an resource manager not found (404)
          example: 8002-404
        description:
          type: string
          description: Description of the error occured
          example: Resource manager service not found
        additionalData:
          type: string
          description: Additional information about the error. If no other information
            is explicitly provided, it may contain a stack trace.
          example: The resource manager returned a 503 error
    DatapointType:
      required:
      - name
      - regex
      type: object
      properties:
        id:
          type: string
          description: Identifier of datapoint type (UUID)
          format: UUID
          example: c9c7e7ed-887b-4156-a79e-35e3a0ed8d58
        name:
          type: string
          description: Name of the datapoint type
          example: date
        regex:
          uniqueItems: true
          type: array
          description: List of regex that validates this datapoint type
          items:
            type: string
            description: List of regex that validates this datapoint type
      description: A datapoint type structure
    CleanNoiseStrategy:
      type: object
      properties:
        apply:
          type: boolean
          description: Defines whether to apply the Noise cleanser
          example: false
          default: false
        threshold:
          type: number
          description: Defines the threshold limit to apply the Noise cleanser
          example: 0.5
          default: 0
      description: Cleanser Noise Strategy
    CleanserStrategy:
      type: object
      properties:
        cleanNoiseStrategy:
          $ref: '#/components/schemas/CleanNoiseStrategy'
        suggestionsStrategy:
          $ref: '#/components/schemas/SuggestionsStrategy'
      description: Cleanser Strategy
    Pageable:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/Sort'
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    LoggerVM:
      type: object
      properties:
        name:
          type: string
        level:
          type: string
    ConsolidationMetadata:
      required:
      - consolidable
      - country
      - docType
      - language
      - path
      - subtype
      type: object
      properties:
        id:
          type: string
          description: Consolidatioin id
        docType:
          type: string
          description: Type of the consolidated document
          example: SANMX
        subtype:
          type: string
          description: Subtype of the consolidated document
          example: RFC
        language:
          type: string
          description: Language of the consolidated document
          example: SPANISH
        country:
          type: string
          description: Country of the consolidated document
          example: Mexico
        identifierOfSet:
          type: string
          description: Identifier of the set of documents that were consolidated together
          format: uuid
        key:
          type: string
          description: Key of the consolidated attribute
          example: Nombre
        path:
          type: string
          description: |-
            Path to the attribute in the consolidated resource.
            It is automatically calculated by the consolidation module
        description:
          type: string
          description: Description for the consolidation
        attributeValue:
          type: string
          description: Value of the consolidated attribute
          example: Pepe Perez
        attributeIdentifier:
          type: string
          description: Identifier of the consolidated attribute
          format: uuid
        resourceIdentifier:
          type: string
          description: Identifier of the consolidated resource
          format: uuid
        consolidable:
          uniqueItems: true
          type: array
          description: Information about other datapoints that were consolidated with
            this one
          items:
            $ref: '#/components/schemas/ConsolidationMetadataGeneric'
      description: ConsolidationMetadata with the set of consolidables
    ConsolidationMetadataGeneric:
      required:
      - country
      - docType
      - language
      - path
      - subtype
      type: object
      properties:
        id:
          type: string
          description: Consolidatioin id
        docType:
          type: string
          description: Type of the consolidated document
          example: SANMX
        subtype:
          type: string
          description: Subtype of the consolidated document
          example: RFC
        language:
          type: string
          description: Language of the consolidated document
          example: SPANISH
        country:
          type: string
          description: Country of the consolidated document
          example: Mexico
        identifierOfSet:
          type: string
          description: Identifier of the set of documents that were consolidated together
          format: uuid
        key:
          type: string
          description: Key of the consolidated attribute
          example: Nombre
        path:
          type: string
          description: |-
            Path to the attribute in the consolidated resource.
            It is automatically calculated by the consolidation module
        description:
          type: string
          description: Description for the consolidation
        attributeValue:
          type: string
          description: Value of the consolidated attribute
          example: Pepe Perez
        attributeIdentifier:
          type: string
          description: Identifier of the consolidated attribute
          format: uuid
        resourceIdentifier:
          type: string
          description: Identifier of the consolidated resource
          format: uuid
      description: Metadata for the datapoints the parent datapoint conoslidates with
    Attribute:
      type: object
      properties:
        key:
          type: string
          description: Similar to the section label. Human readable name of the attribute.
          example: Name
        description:
          type: string
          description: Description of the attribute.
        path:
          type: string
          description: |-
            Identifies the unique path to the attribute. It has to matches this regexp:
            sections::label@@(?<child>[^:]+(::children::label@@[^:]+)*)::attributes::key@@(?<attr>.+)
          example: sections::label@@PASSPORT::children::label@@Persona::attributes::key@@Nombre
        mandatory:
          type: boolean
          description: Indicates if this attribute is mandatory.
        multiple:
          type: boolean
          description: Indicates if this attribute is an array.
        annotationName:
          type: string
          description: Name of the attribute given within the annotation phase.
          example: NAME
        featureName:
          type: string
          description: Name of the feature given within the annotation phase.
          example: name
        defaultValue:
          type: string
          description: Default value.
          nullable: true
        distance:
          type: string
          nullable: true
        weight:
          type: number
          format: float
          nullable: true
        datatype:
          type: string
          description: Identifier of the datatype. UUID format.
          format: uuid
        langDatatype:
          type: string
          description: Language for the datatype.t
          example: es
        separatorDataType:
          type: string
          description: Separator for the datatype.
          example: comma
        unique:
          type: boolean
          description: Indicates if this attribute is unique.
        originType:
          type: string
          description: |-
            Valid values are:
            - Explicit: the value is not calculated.
            - Inferred: the value is calculated.
        normalizedDateFormat:
          type: string
          description: Date format in case the datapoint is a date to normalize.
          format: date
        normalizedAmountSeparator:
          type: string
          description: Separator type in case the datapoint is a number to normalize.
          example: dot
        normalizeToUppercase:
          type: boolean
          description: Indicates if the attribute is required to uppercase when normalize.
        normalizeToStripDashes:
          type: boolean
          description: Indicates if the attribute is required to normalize to strip
            dashes when normalize.
        reportingMatchStrategy:
          type: string
          description: |-
            Valid values are:
            - PERFECT_MATCH: In case of grammar extraction, it's needed to be a full match to extract this value.
            - SIMILARITY: In case of grammar extraction, it isn't necessary a full match to extract the attribute.
          enum:
          - PERFECT_MATCH
          - SIMILARITY
        similarityThreshold:
          type: number
          description: |-
            In case of SIMILARITY reporting match strategy, it indicates the threshold ti stablish the similarity.
            Values between 0.0 and 1.0.
      description: Contains the final datapoint metadata
    AttributeLocation:
      type: object
      properties:
        id:
          pattern: ^-?\d+$
          type: string
          description: 'The id of the location: this should be filled up by the Data
            Transformer no need for the NLP pipeline to fill up this value'
          example: "1"
        start:
          minimum: 0
          type: integer
          description: The start node of the gate annotation
          format: int64
          example: 16
        end:
          minimum: 0
          type: integer
          description: The end node of the gate annotation
          format: int64
          example: 19
      description: Information about the datapoint location inside the document
    AttributeValidation:
      type: object
      properties:
        validationType:
          type: string
          description: 'What kind of validation was used in the processing of the
            resource: "automatic" if was used an automatic method, "manual" if was
            used a manual one.'
          example: automatic
          enum:
          - MANUAL
          - AUTOMATIC
        valid:
          type: boolean
          description: Boolean flag to indicate that the attribute is valid (automatic
            or manual validation)
        confidence:
          maximum: 1
          minimum: 0
          type: number
          description: Value of confidence that the datapoint is correct. From 0 to
            1
          format: double
          example: 0.9
        supervised:
          type: boolean
          description: (Deprecated 4.0.0)
          deprecated: true
        slaCompliant:
          type: boolean
          description: Boolean flag to indicate that the datapoint confidence reaches
            the sla
        rejectReason:
          type: string
          description: (Deprecated 4.0.0)
          deprecated: true
        supervision:
          type: string
          description: |-
            Value to indicate the status of the datapoint supervision.
            * null - No supervision
            * E - The value has been edited by a supervisor
            * V - The value has been validated
            * C - Deprecated. Original intention was to flag automatic learning correction
          nullable: true
          enum:
          - E
          - V
          - C
      description: Information about the datapoint validation status
    DatapointConsolidationResult:
      type: object
      properties:
        id:
          type: string
          description: Consolidation datapoint id to match this data with the real
            datapoint
          deprecated: true
        datapointId:
          type: string
          description: Consolidation datapoint id to match this data with the real
            datapoint
        resourceId:
          type: string
          description: Id from the resouce that is consolidated
          deprecated: true
        targets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ConsolidationMetadataGeneric'
      description: Information about a specific datapoint consolidation
    Edition:
      type: object
      properties:
        editor:
          type: string
          description: The username of the editor that made the modification of the
            resource
          example: someuser
        creation:
          type: string
          description: The first creation of the data extracted for this resource
          format: date-time
        modified:
          type: string
          description: The last modification date applied on the resource
          format: date-time
        resourceVersion:
          type: integer
          description: (Deprecated 4.0.0 - its not used correctly) The last version
            of the resource (each modification increase sequentially the resource
            version.
          format: int32
          deprecated: true
      description: Information about the status of the edition of the resource by
        users
    Feedback:
      type: object
      properties:
        comment:
          type: string
          description: Content of the feedback
          example: This datapoint is bad because it was misspelled
        creation:
          type: string
          description: Timestamp when the feedback was submitted
          format: date-time
        userIdentifier:
          type: string
          description: Username of the user that submitted the feedback
          example: someuser
      description: User feedbacks about a datapoint
    Information:
      type: object
      properties:
        type:
          type: string
          description: Type of the processed resource.
          example: SANMX
        subtype:
          type: string
          description: Subtype of the processed resource.
          example: INE
        format:
          type: string
          description: Mime type of the processed document
          example: application/pdf
        language:
          type: string
          description: Language code of the document
          example: SPANSIH
        country:
          type: string
          description: Country of the processed document
          example: Mexico
        size:
          type: integer
          description: Size of the uploaded document in bytes
          format: int64
          example: 1639288
        textExtractor:
          type: string
          description: |-
            OCR text extractor strategy:
            * TEXT: The document was a plain text document
            * PDFBOXEXTRACTOR: The text was extracted from a text pdf file using pdfbox
            * ABBYY: The text was extracted using abbyy ocr
            * COMBINED: The document is a text pdf but was processed using abbyy/tesseract ocr
            * TESSERACT: The text was extracted using tesseract ocr
          example: ABBYY
          enum:
          - TEXT
          - PDFBOXEXTRACTOR
          - ABBYY
          - COMBINED
          - TESSERACT
        validation:
          $ref: '#/components/schemas/Validation'
        edition:
          $ref: '#/components/schemas/Edition'
        processor:
          $ref: '#/components/schemas/Processor'
        path:
          type: string
          description: Importer file uuid for the original document. It's automatically
            generated by the importer module when the system uploads the extracted
            text file
          format: uuid
        licenseId:
          type: integer
          description: Id for the related license for that type of document and client
          format: int64
          example: 1
          deprecated: true
        quoteId:
          type: integer
          description: Id for the related quote for that type of document and client
          format: int64
          example: 1
          deprecated: true
        fileName:
          type: string
          description: Name of the original document uploaded by client
          example: ine.pdf
        md5Hash:
          type: string
          description: Md5 hash of the whole document used to identify it
          example: cbdf2fa13c595cc3a2d94b81785377e7
        uploadDate:
          type: integer
          description: Timestamp when the document was uploaded
          format: int64
          example: 1572957415024
        creator:
          type: string
          description: Username identifying the user that uploaded the document
          example: someuser
        organizationUuid:
          type: string
          description: UUID of the organization the user belongs at the time of the
            upload
          format: uuid
        uploadId:
          type: string
          description: Identifier of a set of documents that were uploaded at the
            same time. Mainly used by UI and status updates
          example: Documents_11/05/2019-13:36:54
        classifier:
          type: boolean
          description: Flag to indicate if the document was classified or not
        corpus:
          type: boolean
          description: Wether the resource is corpus (and therefore stored in the
            corpus index) or a normally processed resource
        transformerOCRFile:
          type: string
          description: Importer file uuid for the ocr transformed document. It's automatically
            generated by the importer module when the system uploads the extracted
            text file
          format: uuid
      description: General metadata about the resource
    Location:
      type: object
      properties:
        start:
          type: integer
          description: |-
            Start of the annotation expressed in milliseconds or characters. For Audio and Txt locations.
            In the audio location it represents the milliseconds from the start of the audio/video.
            In the text location it represents the number of characters from the start.
          format: int64
          example: 19576
        end:
          type: integer
          description: |-
            End of the annotation expressed in milliseconds or characters. For Audio and Txt locations.
            In the audio location it represents the milliseconds from the start of the audio/video.
            In the text location it represents the number of characters from the start.
          format: int64
          example: 21852
        positionImg:
          uniqueItems: true
          type: array
          description: For Image locations. The array of positions specialized in
            the representation of the location used with visual annotations.
          items:
            $ref: '#/components/schemas/PositionImg'
      description: 'The object location that belongs to the LocationType: this object
        has the information about the offsets of the annotations.'
    LocationData:
      type: object
      properties:
        locationId:
          pattern: ^-?\d+$
          type: string
          description: An ID to link with the attribute (Built in this way because
            the location must not be present when the data is sent to third party
            systems)
          example: "136"
        locationType:
          type: string
          description: |-
            The location type needed to select the location objet that fit with resource format:
            * audio - for audios or videos
            * txt - for text
            * img - for Images or PDF
            It could have more types in the future with the specific structure to represent the information.
          example: img
          enum:
          - img
          - txt
          - audio
        parsedText:
          type: string
          description: Parsed text from the location
          example: some text
        location:
          $ref: '#/components/schemas/Location'
      description: Metadata for a specific location
    Origin:
      type: object
      properties:
        originType:
          type: string
          description: 'It represents the information about the method of extraction:
            "manual", "inferred","explicit", ...'
          example: Explicit
          enum:
          - MANUAL
          - INFERRED
          - EXPLICIT
        details:
          type: string
          description: Details about the origin
          example: Faculty 1 is applied to one person because the resource is about
            the constitution of a company and this person is the administrator
      description: Information about the origin of the datapoint
    PositionImg:
      type: object
      properties:
        top:
          type: integer
          description: The top position of the rectangle that marks the annotations
            expressed as pixels
          format: int32
          example: 123
        left:
          type: integer
          description: The left position of the rectangle that marks the annotations
            expressed as pixels
          format: int32
          example: 456
        right:
          type: integer
          description: The right position of the rectangle that marks the annotations
            expressed as pixels
          format: int32
          example: 52
        bottom:
          type: integer
          description: The bottom position of the rectangle that marks the annotations
            expressed as pixels
          format: int32
          example: 1245
        pageNumber:
          type: integer
          description: The page number where the rectangle is located
          format: int32
          example: 2
        pageWidth:
          type: integer
          description: The page width expressed as pixels
          format: int32
          example: 800
        pageHeight:
          type: integer
          description: The page height expressed as pixels
          format: int32
          example: 1400
      description: Details about the position inside the image document
    Processor:
      type: object
      properties:
        processorType:
          type: string
        processorVersion:
          type: integer
          format: int32
      description: (Deprecated on 4.0.0)
      deprecated: true
    Resource:
      type: object
      properties:
        id:
          type: string
          description: Resource id. It's automatically generated in resource manager
            module when generated for the first time
          format: uuid
        information:
          $ref: '#/components/schemas/Information'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Sections'
        locations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LocationData'
        text:
          type: string
          description: Importer file uuid for the extracted text (cleansed if cleanser
            is enabled). It's automatically generated by the importer module when
            the system uploads the extracted text file
          format: uuid
        originalText:
          type: string
          description: Importer file uuid for the originally extracted text (before
            cleanser). It's automatically generated by the importer module when the
            system uploads the extracted text file
          format: uuid
        transformerOcrXml:
          type: string
          description: (Deprecated on 4.0.0) Old ocr xml field that is used no more.
            It's automatically generated by the importer module when the system uploads
            the extracted text file
          format: uuid
          deprecated: true
        ocrXml:
          type: string
          description: Importer file uuid for the originally ocr xml. That XML can
            be the abbyy generated one or an alto XML. It's automatically generated
            by the importer module when the system uploads the extracted text file
          format: uuid
        gethOCR:
          type: string
          description: Importer file uuid for the tesseract OCR xml. It's automatically
            generated by the importer module when the system uploads the extracted
            text file
          format: uuid
        gateXml:
          type: string
          description: Importer file uuid for the gate xml. It's automatically generated
            by the importer module when the system uploads the extracted text file
          format: uuid
        ocrCleansedTxtRef:
          type: string
          description: Importer file uuid for the cleansed text. It's automatically
            generated by the importer module when the system uploads the extracted
            text file
          format: uuid
        ocrCleanserSuggestionsRef:
          type: string
          description: (Deprecated on 4.0.0) Importer file uuid for ocrCleanserSuggestionsRef.
            It's automatically generated by the importer module when the system uploads
            the extracted text file
          format: uuid
          deprecated: true
        originalTokens:
          type: string
          description: |-
            Original text for tokens corrected by cleanser.
             * Key: Token offset
             * Value: Original texts before applying the corections.
             Stored as a serialized map encoded in base64
          format: base64
          example: eyIyMDA2NSI6IkZSQUdPU08iLCIxMTMzMyI6IkZSQUdPU08iLCIyMzkxMCI6IkZSQUdPU08iLCIyNTkyOCI6IkZSQUdPU08iLCI4NjgzIjoiRlJBR09TTyIsIjI4MTExIjoiRlJBR09TTyIsIjE2NDgiOiJGUkFHT1NPIiwiMzYwMSI6IkZSQUdPU08iLCI2NDUyIjoiRlJBR09TTyIsIjEzNDkyIjoiRlJBR09TTyIsIjg2IjoiRlJBR09TTyIsIjM5NzAyIjoiRlJBR09TTyIsIjM3ODQ4IjoiRlJBR09TTyIsIjQyMjY0IjoiRlJBR09TTyIsIjIxOTQ2IjoiRlJBR09TTyIsIjQ0MTI3IjoiRlJBR09TTyJ9
        status:
          type: integer
          description: |-
            Informs wether the processing went all right or there was an error.
            Valid values are:
            * 0 = Incorrect - There was a processing error
            * 1 = Correct - Processing finished successfully
            * 2 = Cancelled
          format: int32
          example: 0
        errorStatusUpload:
          type: integer
          description: StatusUpload when an error occured. Possible values are the
            same as defined in the statusUpload field specification
          format: int32
          nullable: true
          example: 2
        operation:
          type: string
          description: Operation id. An operation defines a set of document to be
            consolidated after all of them finished processing.
        validationDate:
          type: string
          description: Timestamp with the date the resource was validated
          format: date-time
          nullable: true
        error:
          $ref: '#/components/schemas/ResultError'
        textPlain:
          type: object
          additionalProperties:
            type: string
            description: |-
              Contains the plain text to allow searching over it using imatch search service.
              In order to allow different language contents, the field has a structure of key:value pairs.
              * key: language code
              * value: plain text content

              Example: {"ENGLISH": "This is the extracted text in english."}
          description: |-
            Contains the plain text to allow searching over it using imatch search service.
            In order to allow different language contents, the field has a structure of key:value pairs.
            * key: language code
            * value: plain text content

            Example: {"ENGLISH": "This is the extracted text in english."}
        consolidations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DatapointConsolidationResult'
        warningCode:
          type: integer
          description: Warning code if there is something to warn about. Default is
            -1 meaning there is no warning
          format: int32
          default: -1
        warningMessage:
          type: string
          description: Waring message matching the warning code
          nullable: true
        classified:
          type: boolean
          description: Flag to indicate if the document was classified or not
        normalizationError:
          type: string
          description: Description of the normalization error if any
        status_upload:
          type: integer
          description: |-
            Status of the processing
            Valid values are tthe following:
            * 0: Uploading - The document has been received and is being prepared for processing
            * 1: Saving file - The document is being stored
            * 2: OCR - OCR process
            * 3: Saving transcription - OCR extracted text is being stored
            * 4: Saving OCR XML - OCR xml is being stored
            * 5: (Deprecated) Saving transformed OCR XML - OCR transformed xml is being stored
            * 6: Saving transformed file - OCR transformed pdf is being stored
            * 7: NLP process - NLP datapoint straction process
            * 8: Merge OCR - Locations extraction
            * 9: Calculating confidence - Extracted datapoints confidence value calculation
            * 10: Cleanser process - Text cleansing process
            * 11: Classifying - Document classification
            * 12: Signature Extraction
            * 13: Normalizing
            * 14: Vertical code detection - Detection of verttical text
            * 999: Finished - The processing has ended eithter successfully or due to errors
          format: int32
          example: 999
        status_corpus:
          type: integer
          description: |-
            Status of the corpus edition
            Valid values are the following:
            * 0: Not edited - The document has not been modified
            * 1: In progress - The document has been modified and saved as draft
            * 2: Validated - The document has been modified and validated
          format: int32
          example: 0
      description: The main resource that contains all the information about the extraction
        process
    ResultError:
      type: object
      properties:
        errorCode:
          pattern: ^\d{4}-\d{3}$
          type: string
          description: |-
            Error code. The error codes are formed with the following structure:
            <service code>-<specific error code>
            For example: 8002-404 means there was an error in pipeline executor (8002) caused by an resource manager not found (404)
          example: 8002-404
        errorCodeDescription:
          type: string
          description: Description of the error occured
          deprecated: true
        errorDesc:
          type: string
          description: Description of the error occured
          example: Resource manager service not found
        developerMessage:
          type: string
          description: Additional information about the error. May contain stack traces
            if no other information is explicitly provided
          example: The resource manager returned a 503 error
          deprecated: true
        moreInfo:
          type: string
          description: Additional information about the error. May contain stack traces
            if no other information is explicitly provided
          example: The resource manager returned a 503 error
      description: Information about an error if any occured
      nullable: true
    Sections:
      type: object
      properties:
        label:
          type: string
          description: Unique id of the section to allow diferentiation beetween sections
            with the same label
          format: uuid
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        id:
          type: string
          description: Unique id of the section to allow diferentiation beetween sections
            with the same label
          format: uuid
      description: Recursive structure that stores the resource datapoints
    Validation:
      type: object
      properties:
        validationType:
          type: string
          description: 'What kind of OCR validation was used in the processing of
            the resource: "Text": The document was a txt and no validation is needed."Text
            Pdf": The document was a text pdf and only suspiciousness may apply."Image":
            The document was an image or a pdf with embedded images. Dpi and suspiciousness
            validation may apply.'
          example: Text Pdf
        valid:
          type: boolean
          description: Boolean flag to indicate that the resource is validated
          example: true
          default: false
        confidence:
          maximum: 1
          minimum: 0
          type: number
          description: Value of confidence that the resource datapoints are correct.
            From 0 to 1
          format: double
          example: 0.9
        slaValue:
          type: number
          description: Value of the calculated confidence
          format: float
          deprecated: true
        slaThreshold:
          type: number
          description: Value of the contract confidence sla
          format: float
          deprecated: true
        supervised:
          type: boolean
          description: Boolean flag to indicate that the document is supervised (aka.
            not structured)
        slaCompliant:
          type: boolean
          description: Boolean flag to indicate thatt the document reaches the contract
            defined sla threshold
          example: true
        slaSupervisedExplicitDatapoint:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        slaSupervisedInferedDatapoint:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        slaLowerThreshold:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        slaNotSupervisedDocument:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        slaNotSupervisedDatapoint:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        dpi:
          minimum: 0
          type: integer
          description: Dots Per Inch. A measure of the resolution of the document
            if it contains images
          format: int32
          example: 260
        pages:
          minimum: 0
          type: integer
          description: Number of pages in the document
          format: int32
          example: 5
        rejectReason:
          type: string
          description: |-
            Reason why the document was rejected by OCR
            * DPI - calculated dpi value is lower than the threshold
            * SUSP - calculated suspicious rate value is lower than the threshold
          nullable: true
          example: DPI
        supervision:
          type: string
          description: |-
            Status of the supervision of a resource.
            * V = Validated
            * E = Edited
          nullable: true
          example: null
          default: null
        mobile:
          type: boolean
          description: Boolean flag to indicate that the doocument is a photograph
        suspicious_rate:
          maximum: 1
          minimum: 0
          type: number
          description: Percentage of suspicius characters in the extracted text. A
            suspicious character is a character that has a low confidence to have
            been correctly extracted by OCR
          format: float
          example: 0.48
      description: Metadata about the OCR validation of the resource
    Values:
      type: object
      properties:
        normalizeValue:
          type: string
          description: Value after normalization. This is the value that is shown
            in UI and that should be used as final value
          example: Paco
        markCorrection:
          type: boolean
          description: Flag that if true indicates that the datapoint that has been
            edited must be saved as correction for cleanser training
          nullable: true
        originalValue:
          type: string
          description: Original datapoint value before normalizations or editions
          example: Fransisco
        originalNormalizeValue:
          type: string
          description: Datapoint value before a user edition. That way you can compaer
            and see what changed
          example: Francisco
        forwardContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        backwardContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        surroundContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        oneWordAfterContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        lineForwardContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        lineBackwardContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
      description: Actual value, old values and other metadata about the attribute
    AttributeDTO:
      type: object
      properties:
        key:
          type: string
        feedbacks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Feedback'
        value:
          type: string
        consolidationIdentifier:
          type: string
        confidence:
          type: number
          format: double
        editedBy:
          type: string
        editedDate:
          type: string
          format: date-time
        origin:
          $ref: '#/components/schemas/Origin'
    InformationDTO:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        format:
          type: string
        language:
          type: string
        country:
          type: string
        validation:
          $ref: '#/components/schemas/ValidationDTO'
        fileName:
          type: string
        uploadDate:
          type: integer
          format: int64
        creator:
          type: string
        path:
          type: string
    ResourceDTO:
      type: object
      properties:
        id:
          type: string
        information:
          $ref: '#/components/schemas/InformationDTO'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionsDTO'
        status:
          type: integer
          format: int32
        status_upload:
          type: integer
          format: int32
        operation:
          type: string
        error:
          $ref: '#/components/schemas/ResultErrorDTO'
        consolidations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DatapointConsolidationResult'
    ResultErrorDTO:
      type: object
      properties:
        errorCode:
          type: string
        errorDesc:
          type: string
    SectionsDTO:
      type: object
      properties:
        label:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeDTO'
        children:
          type: array
          items:
            $ref: '#/components/schemas/SectionsDTO'
        id:
          type: string
    ValidationDTO:
      type: object
      properties:
        validationType:
          type: string
        valid:
          type: boolean
        dpi:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
        rejectReason:
          type: string
        mobile:
          type: boolean
        suspicious_rate:
          type: number
          format: float
    ScrollResponse:
      type: object
      properties:
        scroll:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
    Status:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        message:
          type: string
    OcrParamDescription:
      type: object
      properties:
        name:
          type: string
          description: Name of parameter.
          example: isEmail
        description:
          type: string
          description: Description of the parameter.
          example: This parameter will be evaluated for (in positive case) email extraction
            processing
        type:
          type: string
          description: Datatype.
          example: BOOLEAN
          enum:
          - STRING
          - FLOAT
          - INTEGER
          - SELECT
          - BOOLEAN
          - MULTIPLE
        options:
          type: array
          description: List of selectable values.
          example:
          - defaultExtractor
          - layout
          - improvedLayout
          items:
            type: string
            description: List of selectable values.
            example: '["defaultExtractor","layout","improvedLayout"]'
        required:
          type: boolean
          description: Enable if a value is required.
        value:
          type: object
          description: The value of the param. Any object is acceptable.
        min:
          type: number
          description: Min value in case the param is a number.
          format: float
          example: 1.0
        max:
          type: number
          description: Max value in case the param is a number.
          format: float
          example: 10.0
        step:
          type: number
          description: Step between values in a row in case the param is a number.
          format: float
          example: 2.0
      description: OCR configuration parameter details.
    OcrParamNodeDescription:
      type: object
      properties:
        name:
          type: string
          description: Name of parameter.
          example: isEmail
        description:
          type: string
          description: Description of the parameter.
          example: This parameter will be evaluated for (in positive case) email extraction
            processing
        type:
          type: string
          description: Datatype.
          example: BOOLEAN
          enum:
          - STRING
          - FLOAT
          - INTEGER
          - SELECT
          - BOOLEAN
          - MULTIPLE
        options:
          type: array
          description: List of selectable values.
          example:
          - defaultExtractor
          - layout
          - improvedLayout
          items:
            type: string
            description: List of selectable values.
            example: '["defaultExtractor","layout","improvedLayout"]'
        required:
          type: boolean
          description: Enable if a value is required.
        value:
          type: object
          description: The value of the param. Any object is acceptable.
        min:
          type: number
          description: Min value in case the param is a number.
          format: float
          example: 1.0
        max:
          type: number
          description: Max value in case the param is a number.
          format: float
          example: 10.0
        step:
          type: number
          description: Step between values in a row in case the param is a number.
          format: float
          example: 2.0
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/OcrParamNodeDescription'
    OcrParamsDescription:
      required:
      - country
      - id
      - language
      - subtype
      - type
      type: object
      properties:
        id:
          type: string
          description: Document configuration ID
          example: SeguridadSocial
        type:
          type: string
          description: Document type
          example: SeguridadSocial
        subtype:
          type: string
          description: Document subtype
          example: notasimple
        country:
          type: string
          description: Document country
          example: España
        language:
          type: string
          description: Document language
          example: SPANISH
        isEmail:
          $ref: '#/components/schemas/OcrParamDescription'
        textExtractionStrategy:
          $ref: '#/components/schemas/OcrParamDescription'
        pdfboxStripper:
          $ref: '#/components/schemas/OcrParamDescription'
        dpiThreshold:
          $ref: '#/components/schemas/OcrParamDescription'
        forceResize:
          $ref: '#/components/schemas/OcrParamDescription'
        suspiciousThreshold:
          $ref: '#/components/schemas/OcrParamDescription'
        pdfTextToImage:
          $ref: '#/components/schemas/OcrParamDescription'
        pdfBoxTextExtraction:
          $ref: '#/components/schemas/OcrParamDescription'
        joinTables:
          $ref: '#/components/schemas/OcrParamDescription'
        cropMargins:
          $ref: '#/components/schemas/OcrParamDescription'
        processor:
          $ref: '#/components/schemas/OcrParamDescription'
        rotateVerticalText:
          $ref: '#/components/schemas/OcrParamDescription'
        extendTables:
          $ref: '#/components/schemas/OcrParamDescription'
        tesseractConfig:
          $ref: '#/components/schemas/OcrParamNodeDescription'
        finereaderConfig:
          $ref: '#/components/schemas/OcrParamNodeDescription'
        cleanserStrategy:
          $ref: '#/components/schemas/OcrParamNodeDescription'
        documentConversionConfig:
          $ref: '#/components/schemas/OcrParamNodeDescription'
    ComputerVisionModuleConfiguration:
      type: object
      properties:
        name:
          type: string
          description: Human readable name of the configuration.
        configuration:
          type: object
          additionalProperties:
            type: string
            description: Dictionary with the configuration of the computer vision
              process.
          description: Dictionary with the configuration of the computer vision process.
      description: Entity that represent the configuration for the computer vision
        processing in a doctypeConfiguration.
    DocTypeConfiguration:
      type: object
      properties:
        id:
          type: string
          description: Identifier for the document configuration
        type:
          type: string
          description: The type of the document. The id will correspond with this
            value
        subtype:
          type: string
          description: The subtype of the document.
        country:
          type: string
          description: The country for this document configuration.
        language:
          type: string
          description: The language for this document configuration.
        classifierType:
          type: string
          description: The id used to be identified for the prediction model (classifier)
          nullable: true
        extractionStrategy:
          type: string
          description: |-
            Extraction strategy for this configuration of document:
            - GRAMMAR: Type of extraction by matching regular expressions through Gate.
            - HYBRID: Mixes grammar extraction with other extraction ways based on ML or position matching.
            - ONTOLOGY: Deprecated from 4.x version.
            - KEY_VALUE: Based on training statistical models to predict values for specific keys.
            - SDK: Extraction which uses the Taiger Cognitive ML models to determine the outputs.
          enum:
          - GRAMMAR
          - HYBRID
          - ONTOLOGY
          - KEY_VALUE
          - SDK
        calculateLocations:
          type: boolean
          description: If enabled, it will indicate to the processing workflow to
            calculate the position of the extracted values on the source.
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
        filesToKeep:
          type: array
          description: |-
            List of files to keep:
            - ORIGINAL_DOCUMENT: The source file to process.
            - POST_PROCESSING_TEXT: Text generated by the processing step in the processing workflow.
            - XML_OCR: XML generated by the OCR.
            - XML_GATE: XML generated by Gate.
            - TRANSFORMER_ORIGINAL_DOCUMENT: Transformed original document.
            - HOCR: XML generated by Tesseract with the result of the OCR recognition.
          items:
            type: string
            description: |-
              List of files to keep:
              - ORIGINAL_DOCUMENT: The source file to process.
              - POST_PROCESSING_TEXT: Text generated by the processing step in the processing workflow.
              - XML_OCR: XML generated by the OCR.
              - XML_GATE: XML generated by Gate.
              - TRANSFORMER_ORIGINAL_DOCUMENT: Transformed original document.
              - HOCR: XML generated by Tesseract with the result of the OCR recognition.
            enum:
            - ORIGINAL_DOCUMENT
            - POST_PROCESSING_TEXT
            - XML_OCR
            - XML_GATE
            - TRANSFORMER_ORIGINAL_DOCUMENT
            - HOCR
        processComputerVision:
          type: boolean
          description: Indicates if the computer vision service is required.
        computerVisionModules:
          type: array
          description: List with the computer vision modules to apply in this configuration.
          example:
          - signature_extractor
          - vertical_ife
          items:
            type: string
            description: List with the computer vision modules to apply in this configuration.
            example: '["signature_extractor","vertical_ife"]'
        computerVisionConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ComputerVisionModuleConfiguration'
        verificationThreshold:
          maximum: 1.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Value between 0.0 and 1.0 that indicates the threshold to consider
            it a processable document.
        fileSampling:
          maximum: 100
          minimum: 0
          type: integer
          description: Probability of a generated file to be kept (values between
            0 and 100).
          format: int32
      description: Entity which contains all the information related with the configuration
        set for a document typology.It's uniqueness is determined for its id or by
        type + subtype + country + language
    Section:
      type: object
      properties:
        label:
          type: string
          description: Unique id of the section to allow diferentiation beetween sections
            with the same label
          format: uuid
        description:
          type: string
          description: Description of the datapoint.
          nullable: true
        featureName:
          type: string
          description: Feature name of the datapoint.
          nullable: true
        mandatory:
          type: boolean
          description: Indicates if this datapoint is mandatory.
        multiple:
          type: boolean
          description: Indicates if the datapoint is an array.
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        children:
          type: array
          items:
            $ref: '#/components/schemas/Section'
      description: Recursive structure to define the document configuration datapoints.
    Document:
      type: object
      properties:
        type:
          type: string
          description: The type of the document.
          example: The name of the company or institution
        subtype:
          type: string
          description: The subtype of the document.
          example: Passport
        country:
          type: string
          description: The country of the document.
          example: Singapore
        language:
          type: string
          description: The language of the document.
          example: English
      description: Entity which contains the information of a document.
    ContentDisposition:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        filename:
          type: string
        charset:
          type: object
          properties:
            registered:
              type: boolean
        size:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        readDate:
          type: string
          format: date-time
    HttpHeaders:
      type: object
      properties:
        all:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
        lastModified:
          type: integer
          format: int64
        date:
          type: integer
          format: int64
        contentLength:
          type: integer
          format: int64
        contentType:
          $ref: '#/components/schemas/MediaType'
        ifModifiedSince:
          type: integer
          format: int64
        accessControlRequestMethod:
          type: string
          enum:
          - GET
          - HEAD
          - POST
          - PUT
          - PATCH
          - DELETE
          - OPTIONS
          - TRACE
        acceptCharset:
          type: array
          items:
            type: object
            properties:
              registered:
                type: boolean
        allow:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - GET
            - HEAD
            - POST
            - PUT
            - PATCH
            - DELETE
            - OPTIONS
            - TRACE
        bearerAuth:
          type: string
          writeOnly: true
        cacheControl:
          type: string
        connection:
          type: array
          items:
            type: string
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        contentLanguage:
          type: object
          properties:
            displayName:
              type: string
            script:
              type: string
            country:
              type: string
            variant:
              type: string
            extensionKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleAttributes:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            iso3Language:
              type: string
            iso3Country:
              type: string
            displayLanguage:
              type: string
            displayScript:
              type: string
            displayCountry:
              type: string
            displayVariant:
              type: string
            language:
              type: string
        etag:
          type: string
        expires:
          type: integer
          format: int64
        ifMatch:
          type: array
          items:
            type: string
        ifNoneMatch:
          type: array
          items:
            type: string
        ifUnmodifiedSince:
          type: integer
          format: int64
        origin:
          type: string
        pragma:
          type: string
        range:
          type: array
          items:
            $ref: '#/components/schemas/HttpRange'
        upgrade:
          type: string
        vary:
          type: array
          items:
            type: string
        location:
          type: string
          format: uri
        host:
          type: object
          properties:
            hostString:
              type: string
            address:
              type: object
              properties:
                canonicalHostName:
                  type: string
                multicastAddress:
                  type: boolean
                anyLocalAddress:
                  type: boolean
                loopbackAddress:
                  type: boolean
                linkLocalAddress:
                  type: boolean
                siteLocalAddress:
                  type: boolean
                mcglobal:
                  type: boolean
                mcnodeLocal:
                  type: boolean
                mclinkLocal:
                  type: boolean
                mcsiteLocal:
                  type: boolean
                mcorgLocal:
                  type: boolean
                hostAddress:
                  type: string
                address:
                  type: array
                  items:
                    type: string
                    format: byte
                hostName:
                  type: string
            port:
              type: integer
              format: int32
            unresolved:
              type: boolean
            hostName:
              type: string
        accept:
          type: array
          items:
            $ref: '#/components/schemas/MediaType'
        acceptLanguage:
          type: array
          items:
            type: object
            properties:
              range:
                type: string
              weight:
                type: number
                format: double
        acceptLanguageAsLocales:
          type: array
          items:
            type: object
            properties:
              displayName:
                type: string
              script:
                type: string
              country:
                type: string
              variant:
                type: string
              extensionKeys:
                uniqueItems: true
                type: array
                items:
                  type: string
              unicodeLocaleAttributes:
                uniqueItems: true
                type: array
                items:
                  type: string
              unicodeLocaleKeys:
                uniqueItems: true
                type: array
                items:
                  type: string
              iso3Language:
                type: string
              iso3Country:
                type: string
              displayLanguage:
                type: string
              displayScript:
                type: string
              displayCountry:
                type: string
              displayVariant:
                type: string
              language:
                type: string
        accessControlAllowCredentials:
          type: boolean
        accessControlAllowHeaders:
          type: array
          items:
            type: string
        accessControlAllowMethods:
          type: array
          items:
            type: string
            enum:
            - GET
            - HEAD
            - POST
            - PUT
            - PATCH
            - DELETE
            - OPTIONS
            - TRACE
        accessControlAllowOrigin:
          type: string
        accessControlExposeHeaders:
          type: array
          items:
            type: string
        accessControlMaxAge:
          type: integer
          format: int64
        accessControlRequestHeaders:
          type: array
          items:
            type: string
        empty:
          type: boolean
      additionalProperties:
        type: array
        items:
          type: string
    HttpRange:
      type: object
    MediaType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        qualityValue:
          type: number
          format: double
        charset:
          type: object
          properties:
            registered:
              type: boolean
        wildcardType:
          type: boolean
        wildcardSubtype:
          type: boolean
        concrete:
          type: boolean
    Operation:
      type: object
      properties:
        id:
          type: string
        resources:
          type: array
          items:
            type: string
        size:
          type: integer
          format: int32
    TimeTrace:
      type: object
      properties:
        id:
          type: string
          description: Identifier of timetrace (UUID).
          format: UUID
          example: c9c7e7ed-887b-4156-a79e-35e3a0ed8d58
        resourceid:
          type: string
          description: Identifier of associated resource (UUID).
          format: UUID
          example: 84fe7b49-b105-4d29-b14f-26e2d5db92dd
        start:
          type: string
          description: Timestamp with of the process beginning (epoch format).
          format: date-time
        end:
          type: string
          description: Timestamp with of the process ending (epoch format).
          format: date-time
        processingTime:
          type: integer
          description: Duration of the process (epoch format).
          format: int64
          example: 5433
        process:
          type: string
          description: Name of the process.
          example: pipeline.nlp-pipeline-service.call
      description: Timetrace structure
    ProfileInfoResponse:
      type: object
      properties:
        activeProfiles:
          type: array
          items:
            type: string
        ribbonEnv:
          type: string
  securitySchemes:
    bearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
