openapi: 3.0.1
info:
  title: Extract Resource Manager API
  description: API definition for Extract Resource Manager microservice.
  version: 4.0.0-SNAPSHOT
servers:
- url: http://localhost:8080
  description: Generated server url
security:
  - bearerToken: [] 
tags:
  - name: timetrace
    description: Endpoints for timetraces CRUD operations
  - name: operation
    description: Endpoints for operation entity
  - name: doctypeConfiguration
    description: Endpoints for document configuration operations
  - name: datapoint-consolidation
    description: Endpoints for datapoint-consolidation entity
  - name: dump
    description: Endpoints for export / import operations
  - name: ocr-params-details
    description: Endpoints for ocr params template
  - name: resource
    description: Endpoints for resource
  - name: consolidation
    description: The main consolidation resources endpoints
  - name: ocr-params
    description: Endpoints for ocr params
  - name: datapoint-type
    description: Endpoints for datapoint-type entity
paths:
  /api/datapoint-types/{id}:
    get:
      tags:
      - datapoint-type
      summary: Gets a datapoint type by id
      description: Gets a datapoint type by its identifier
      operationId: getDatapointTypeById
      parameters:
      - name: id
        in: path
        description: Identifier of datapoint type (UUID)
        required: true
        schema:
          type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatapointType'
    delete:
      tags:
      - datapoint-type
      summary: Delete a datapoint type by id
      description: Delete a datapoint type by its identifier
      operationId: deleteDatapointTypeById
      parameters:
      - name: id
        in: path
        description: Identifier of datapoint type (UUID)
        required: true
        schema:
          type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The datapoint type was deleted successfully
  /api/datapoint-types:
    get:
      tags:
      - datapoint-type
      summary: Retrieves all the datapoint types
      description: Retrieves all the datapoint types with pagination
      operationId: getDatapointTypes
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 2
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatapointType'
    put:
      tags:
      - datapoint-type
      summary: Update an existing datapoint type
      description: Update an existing datapoint type
      operationId: createDatapointType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatapointType'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The datapoint type was updated successfully
    post:
      tags:
      - datapoint-type
      summary: Post a datapoint type
      description: Persists a new datapoint type
      operationId: createDatapointType_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatapointType'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The datapoint type was inserted successfully
  /api/ocrParams/main/{type}/{subtype}:
    get:
      tags:
      - ocr-params
      summary: Gets ocr-params by type and subtype.
      description: Gets ocr-paramsby type and subtype.
      operationId: getMainOcrParams
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: subtype
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrParams'
  /api/ocrParams/{id}:
    get:
      tags:
      - ocr-params
      summary: Gets ocr-params by id.
      description: Gets ocr-params by id.
      operationId: searchOcrParams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrParams'
    put:
      tags:
      - ocr-params
      summary: Update a ocr params entity.
      description: Update an existing ocr params entity.
      operationId: updateOcrParams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OcrParams'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The ocr-params was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrParams'
    delete:
      tags:
      - ocr-params
      - ocr-params-details
      summary: Delete ocr params by id.
      description: Delete ocr params by id.
      operationId: deleteOcrParams
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The ocr params entity was deleted successfully
  /api/ocrParams:
    get:
      tags:
      - ocr-params
      - ocr-params-details
      summary: Retrieves all the ocr-params.
      description: Retrieves a paginated list of ocr-params.
      operationId: getAllOcrParams
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 1
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OcrParams'
    post:
      tags:
      - ocr-params
      summary: Create a ocr params entity.
      description: Create a ocr params entity.
      operationId: createOcrParams
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OcrParams'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The ocr-params was created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrParams'
  /api/ocrParams/{type}/{subtype}/{country}/{language}:
    get:
      tags:
      - ocr-params
      summary: Gets ocr-params by stage.
      description: Gets ocr-params by stage.
      operationId: getOcrParams
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: subtype
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: path
        required: true
        schema:
          type: string
      - name: language
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrParams'
  /management/jhipster/logs:
    get:
      operationId: getList
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoggerVM'
    put:
      operationId: changeLevel
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LoggerVM'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        204:
          description: default response
  /api/consolidation:
    put:
      tags:
      - consolidation
      summary: Update an existing consolidation set
      description: Consumes an existing consolidation resource with n consolidables,
        then update the resources (index the new consolidables or delete the old consoldables).
      operationId: updateConsolidationSet
      requestBody:
        description: ConsolidationMetadata with information about consolidations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsolidationMetadata'
        required: true
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The consolidation set was updated successfully
    post:
      tags:
      - consolidation
      summary: Post a consolidation set
      description: 'Consumes a consolidation resource with n consolidables, then post
        n+1 consolidable resources with a common identifier of set '
      operationId: addConsolidationSet
      requestBody:
        description: ConsolidationMetadata with information about consolidations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsolidationMetadata'
        required: true
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The consolidation set was inserted successfully
  /api/consolidation/{id}:
    get:
      tags:
      - consolidation
      summary: Get a consolidation resource by id
      description: Get a consolidation resource by identifier
      operationId: getConsolidationById
      parameters:
      - name: id
        in: path
        description: Identifier of consolidation resource (UUID)
        required: true
        schema:
          type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsolidationMetadata'
    delete:
      tags:
      - consolidation
      summary: Delete a consolidation resource by id
      description: Delete a consolidation resource by its identifier
      operationId: deleteConsolidation
      parameters:
      - name: id
        in: path
        description: Identifier of consolidation resource (UUID)
        required: true
        schema:
          type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The consolidation resource was removed succesfully
  /api/consolidation/pair/{consIdA}/{consIdB}:
    delete:
      tags:
      - consolidation
      summary: Delete a consolidation duple by ids
      description: Removes a consolidation duple relations with the id of each consolidation.I.e.
        A consolidated with B,C; B is consolidated with A,D. We could want to remove
        the relation between A and B through passing params A.id, B.id
      operationId: deleteConsolidationPair
      parameters:
      - name: consIdA
        in: path
        description: Identifier of resource A (UUID)
        required: true
        schema:
          type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      - name: consIdB
        in: path
        description: Identifier of resource B (UUID)
        required: true
        schema:
          type: string
        example: 5fag7jf64-5717-1029-c4mfc-3fa85f64
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The consolidation resource was removed succesfully
  /api/consolidations:
    get:
      tags:
      - consolidation
      summary: Retrieves a consolidation list by document parameters
      description: 'Retrieves a consolidation list by optional params: identifier
        of set, docType, subType, country or language attributes'
      operationId: getConsolidationsByParams
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 2
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      - name: idSet
        in: query
        required: false
        schema:
          type: string
      - name: docType
        in: query
        required: false
        schema:
          type: string
      - name: subType
        in: query
        required: false
        schema:
          type: string
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: language
        in: query
        required: false
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: the request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsolidationMetadata'
  /api/consolidations/all:
    get:
      tags:
      - consolidation
      summary: Retrieves all the consolidation resources
      description: Retrieves all the consolidations resources with pagination
      operationId: getAllConsolidations
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 2
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsolidationMetadata'
  /api/resource/result/{identifier}:
    get:
      tags:
      - resource
      summary: Get resource by id with only the extracted data and basic metadata
      description: Get resource by id with only the extracted data and basic metadata
      operationId: getResult
      parameters:
      - name: identifier
        in: path
        description: Identifier of resource
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/{identifier}:
    get:
      tags:
      - resource
      summary: Get resource by id
      description: Get resource by id
      operationId: get_1
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
    delete:
      tags:
      - resource
      summary: Delete resource by id
      description: Delete resource by id
      operationId: deleteResource
      parameters:
      - name: identifier
        in: path
        description: Resource identifier
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The resource was deleted successfully
  /api/corpus/resource/{identifier}:
    get:
      tags:
      - resource
      summary: Get corpus resource by id
      description: Get corpus resource by id and delete it(optional)
      operationId: getCorpus
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
    delete:
      tags:
      - resource
      summary: Delete corpus resource by id
      description: Delete corpus resource by id
      operationId: deleteCorpusResource
      parameters:
      - name: identifier
        in: path
        description: Corpus identifier
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The resources were deleted successfully
  /api/nlp/resource/{identifier}:
    delete:
      tags:
      - resource
      summary: Delete nlp resource by id
      description: Delete nlp resource by id
      operationId: deleteNLPResource
      parameters:
      - name: identifier
        in: path
        description: Corpus identifier
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The nlp resource was deleted successfully
  /api/corpus/resource/index:
    post:
      tags:
      - resource
      summary: Create a corpus resource
      description: Create a corpus resource
      operationId: indexCorpus
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The corpus resource was inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/hash/{md5Hash}:
    get:
      tags:
      - resource
      summary: Get resource by md5hash
      description: Get resource by md5hash
      operationId: getResourcesByHash
      parameters:
      - name: md5Hash
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/validated/{hash}:
    get:
      tags:
      - resource
      summary: Get first validated resource by md5Hash
      description: Get first validated resource by md5Hash
      operationId: getValidatedByHash
      parameters:
      - name: hash
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/nlp/resource/index:
    post:
      tags:
      - resource
      summary: Create a nlp resource
      description: Create a nlp resource
      operationId: indexNLP
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The nlp resource was inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/dto/update:
    put:
      tags:
      - resource
      summary: Update a resource (dto)
      description: Update a resource (dto)
      operationId: updateDTO
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResourceDTO'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The resource was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDTO'
  /api/corpus/resource/update:
    put:
      tags:
      - resource
      summary: Update a corpus resource
      description: Update a corpus resource
      operationId: updateDTO_1
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The corpus resource was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/nlp/resource/update:
    put:
      tags:
      - resource
      summary: Update a nlp resource
      description: Update a nlp resource
      operationId: updateNLP
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The corpus resource was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/dto/{identifier}:
    get:
      tags:
      - resource
      summary: Get resource by id (dto)
      description: Get resource by id (dto)
      operationId: get
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDTO'
  /api/get-resources-from-operation/{operationId}:
    get:
      tags:
      - resource
      summary: Get resources from operation
      description: Get resources from operation by operation ida
      operationId: getResourcesFromOperation
      parameters:
      - name: operationId
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/corpus/resourcesOfStageType/{stageType}/{stageSubtype}:
    get:
      tags:
      - resource
      summary: Get corpus resources by stage (type and subtype)
      description: Get corpus resources by stage (type and subtype)
      operationId: getResourcesOfStageType
      parameters:
      - name: stageType
        in: path
        required: true
        schema:
          type: string
      - name: stageSubtype
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/get-resources/pagination/{docType}/{subType}/{size}/{from}:
    get:
      tags:
      - resource
      summary: Get resources by stage (type and subtype) with pagination
      description: Get resources by stage (type and subtype) with pagination
      operationId: getResourcesPaginate
      parameters:
      - name: docType
        in: path
        required: true
        schema:
          type: string
      - name: subType
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: from
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/get-all-subtypes:
    get:
      tags:
      - resource
      summary: Get all subtypes by from corpus index
      description: Get all subtypes by from corpus index
      operationId: getAllSubtypesFromResources
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: string
  /api/report/resources:
    get:
      tags:
      - resource
      summary: Get report resources
      description: Get a list of report resources
      operationId: getReportResources
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 1
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dt
        in: query
        required: false
        schema:
          type: string
      - name: ds
        in: query
        required: false
        schema:
          type: string
      - name: dc
        in: query
        required: false
        schema:
          type: string
      - name: dl
        in: query
        required: false
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/report/resources/scroll/{scrollId}:
    get:
      tags:
      - resource
      summary: Get report resources scroll
      description: Get report resources scroll
      operationId: getReportResourcesScroll
      parameters:
      - name: scrollId
        in: path
        required: true
        schema:
          type: string
      - name: scrollTime
        in: query
        required: false
        schema:
          type: string
          default: 5m
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrollResponse'
  /api/report/resources/scroll:
    get:
      tags:
      - resource
      summary: Get report resources scroll
      description: Get elasticsearch scroll of report resources
      operationId: getReportResourcesScroll_1
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dt
        in: query
        required: false
        schema:
          type: string
      - name: ds
        in: query
        required: false
        schema:
          type: string
      - name: dc
        in: query
        required: false
        schema:
          type: string
      - name: dl
        in: query
        required: false
        schema:
          type: string
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scrollTime
        in: query
        required: false
        schema:
          type: string
          default: 5m
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrollResponse'
  /api/report/corpus/resources:
    get:
      tags:
      - resource
      summary: Get report corpus resources
      description: Get a list of report resources with pagination
      operationId: getReportResources_1
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 1
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dt
        in: query
        required: false
        schema:
          type: string
      - name: ds
        in: query
        required: false
        schema:
          type: string
      - name: dc
        in: query
        required: false
        schema:
          type: string
      - name: dl
        in: query
        required: false
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/report/corpus/resources/scroll:
    get:
      tags:
      - resource
      summary: Get report corpus resources scroll
      description: Get report corpus resources scroll
      operationId: getReportCorpusResourcesScroll
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: dt
        in: query
        required: false
        schema:
          type: string
      - name: ds
        in: query
        required: false
        schema:
          type: string
      - name: dc
        in: query
        required: false
        schema:
          type: string
      - name: dl
        in: query
        required: false
        schema:
          type: string
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: scrollTime
        in: query
        required: false
        schema:
          type: string
          default: 5m
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrollResponse'
  /api/report/corpus/resources/scroll/{scrollId}:
    get:
      tags:
      - resource
      summary: Get report corpus resources by scroll id
      description: Get report corpus resources by scroll id
      operationId: getReportCorpusResourcesScroll_1
      parameters:
      - name: scrollId
        in: path
        required: true
        schema:
          type: string
      - name: scrollTime
        in: query
        required: false
        schema:
          type: string
          default: 5m
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrollResponse'
  /api/corpus/resources/{docType}/{subType}:
    post:
      tags:
      - resource
      summary: Get resources from corpus by ids
      description: Get resources from corpus by ids
      operationId: index
      parameters:
      - name: docType
        in: path
        required: true
        schema:
          type: string
      - name: subType
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
  /api/resource/status/{identifier}:
    get:
      tags:
      - resource
      summary: Get resource status
      description: Get resource status
      operationId: getStatus
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /api/resource/index:
    post:
      tags:
      - resource
      summary: Create a resource
      description: Create a resource
      operationId: index_1
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The resource was inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/resource/update:
    put:
      tags:
      - resource
      summary: Update a resource
      description: Update a resource
      operationId: update
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The resource was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
  /api/ocr-params-details/stage/{type}/{subtype}/{country}/{language}:
    get:
      tags:
      - ocr-params-details
      summary: Gets ocr-params with details by typology (type, subtype, country, language).
      description: Gets ocr-params with descriptions in the requested language populated
        with the corresponding values by its typology.
      operationId: ocrParamsDescription_1
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: subtype
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: path
        required: true
        schema:
          type: string
      - name: language
        in: path
        required: true
        schema:
          type: string
      - name: lang
        in: query
        required: false
        schema:
          enum:
          - en
          - es
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrParamsDescription'
    delete:
      tags:
      - ocr-params-details
      summary: Delete ocr params by typology.
      description: Delete ocr params by its typology (type, subtype, country, language).
      operationId: deleteOcrParams_1
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: subtype
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: path
        required: true
        schema:
          type: string
      - name: language
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The ocr params entity was deleted successfully
  /api/ocr-params-details/{id}:
    get:
      tags:
      - ocr-params-details
      summary: Gets ocr-params with details by id.
      description: Gets ocr-params with descriptions in the requested language populated
        with the corresponding values by id.
      operationId: searchOcrParams_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: lang
        in: query
        required: false
        schema:
          enum:
          - en
          - es
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrParamsDescription'
    put:
      tags:
      - ocr-params-details
      summary: Update a ocr params entity.
      description: Update an existing ocr params entity.
      operationId: updateOcrParams_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: lang
        in: query
        required: false
        schema:
          enum:
          - en
          - es
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OcrParamsDescription'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The ocr-params-details was updated successfully
    delete:
      tags:
      - ocr-params-details
      summary: Delete ocr params by id.
      description: Delete ocr params by its identifier.
      operationId: deleteOcrParams_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The ocr params entity was deleted successfully
  /api/ocr-params-details/template:
    get:
      tags:
      - ocr-params-details
      summary: Gets ocr-params template.
      description: Gets the ocr-params template with descriptions in the requested
        language.
      operationId: ocrParamsDescription
      parameters:
      - name: lang
        in: query
        required: false
        schema:
          enum:
          - en
          - es
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcrParamsDescription'
  /api/ocr-params-details:
    get:
      tags:
      - ocr-params-details
      summary: Retrieves all the ocr-params with template.
      description: Retrieves a paginated list of ocr-params with all the descriptions
        in the requested language.
      operationId: getAllOcrParams_1
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 1
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      - name: lang
        in: query
        required: false
        schema:
          enum:
          - en
          - es
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OcrParamsDescription'
    post:
      tags:
      - ocr-params-details
      summary: Create ocr params entity.
      description: Creates a new ocr params entity.
      operationId: createOcrParams_1
      parameters:
      - name: lang
        in: query
        required: false
        schema:
          enum:
          - en
          - es
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OcrParamsDescription'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The ocr-params-details was inserted successfully
  /api/export:
    get:
      tags:
      - dump
      summary: Get a zip with a dump of indices
      description: Retrieves a zip binary containing a dump of each index passed
      operationId: exportIndexData
      parameters:
      - name: indices
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/octet-stream:
              schema:
                type: string
            application/json: {}
  /api/import:
    post:
      tags:
      - dump
      summary: Import an index to elasticsearch
      description: Import a file containing a dump of a elasticsearch indice
      operationId: importIndexData
      requestBody:
        description: File to import
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
  /api/import-external:
    get:
      tags:
      - dump
      summary: Import a list of indices from an external url to elasticsearch
      description: Retrieves a specified list of indices from an external url and
        import them to elasticsearch
      operationId: importIndexDataExternal
      parameters:
      - name: url
        in: query
        description: External url
        required: true
        schema:
          type: string
        example: http://somehost/dumps/dumps.json
      - name: indices
        in: query
        description: List of indices to import
        required: true
        schema:
          type: array
          items:
            type: string
        example: datapoint_types,metrics
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
  /api/exportables:
    get:
      tags:
      - dump
      summary: Get a list of exportable indices
      description: Retrieves a list of exportable indices
      operationId: getExportableIndexes
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    put:
      tags:
      - dump
      summary: Set a list of exportable indices
      description: Set a list of exportable indices
      operationId: setExportableIndexes
      parameters:
      - name: indices
        in: query
        description: List of indices to import
        required: true
        schema:
          type: array
          items:
            type: string
        example: datapoint_types,metrics,config
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: Exportable indices were updated succesful
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /api/datapoint-consolidation-result:
    post:
      tags:
      - datapoint-consolidation
      - consolidation
      summary: Post a set of datapoint-consolidation resources
      description: Receives a set of 1-n datapoint-consolidation results and index
        them
      operationId: indexConsolidate
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/DatapointConsolidationResult'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The datapoint consolidation results were inserted successfully
  /api/configurations:
    get:
      tags:
      - doctypeConfiguration
      summary: Retrieves a list of configuration types by params
      description: 'Retrieves a paginated list of configuration types by params or
        retrieves all if there aren''t specified params. '
      operationId: getConfigurations
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 1
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      - name: type
        in: query
        required: false
        schema:
          type: string
      - name: subtype
        in: query
        required: false
        schema:
          type: string
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: language
        in: query
        required: false
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocTypeConfiguration'
    put:
      tags:
      - doctypeConfiguration
      summary: Update an existing doctypeConfiguration
      description: Updates an existing doctypeConfiguration
      operationId: updateConfiguration
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocTypeConfiguration'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The doctypeConfiguration was updated successfully
    post:
      tags:
      - doctypeConfiguration
      summary: Create a doctypeConfiguration
      description: Creates a new doctypeConfiguration
      operationId: indexConfiguration
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocTypeConfiguration'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The doctypeConfiguration was inserted successfully
  /api/configuration/export:
    get:
      tags:
      - doctypeConfiguration
      summary: Get a json with a dump of selected doctypeConfigurations
      description: Get a json containing a dump of each id of doctypeConfiguration
        passed
      operationId: exportIndexData_1
      parameters:
      - name: ids
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/octet-stream:
              schema:
                type: string
            application/json: {}
  /api/configurations/stage/{type}/{subtype}/{country}/{language}:
    get:
      tags:
      - doctypeConfiguration
      summary: Gets a doctypeConfiguration by typology
      description: Gets a doctypeConfiguration by its typology (type, subtype, country,
        language)
      operationId: getDocTypeConfigurationByStage
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: subtype
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: path
        required: true
        schema:
          type: string
      - name: language
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocTypeConfiguration'
    delete:
      tags:
      - doctypeConfiguration
      summary: Delete an existing doctypeConfiguration by typology
      description: Delete an existing doctypeConfiguration by its typology (type,
        subtype, country, language)
      operationId: deleteConfiguration
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: subtype
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: path
        required: true
        schema:
          type: string
      - name: language
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The doctypeConfiguration was deleted successfully
  /api/configurations/id/{identifier}:
    get:
      tags:
      - doctypeConfiguration
      summary: Gets a doctypeConfiguration by id
      description: Gets a doctypeConfiguration by its identifier
      operationId: getDocTypeConfigurationById
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocTypeConfiguration'
  /api/configurations/document/{type}/{subtype}:
    put:
      tags:
      - doctypeConfiguration
      summary: Update an existing configuration of document
      description: Updates an existing configuration of document
      operationId: updateConfigDocument
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: subtype
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The document was updated successfully
  /api/configuration/datatypes/langs:
    get:
      tags:
      - doctypeConfiguration
      summary: Retrieves all the datapoint types langs
      description: Retrieves all the datapoint types langs
      operationId: getListOfLangsDataTypes
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: string
              example: '[en, es]'
  /api/configuration/datatypes/separators:
    get:
      tags:
      - doctypeConfiguration
      summary: Retrieves all the datapoint types separators
      description: Retrieves all the datapoint types separators
      operationId: getListOfSeparatorsDataTypes
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: string
              example: '[comma, dot]'
  /api/configurations/stage/{type}/{subtype}/{country}/{language}/datapoints:
    get:
      tags:
      - doctypeConfiguration
      summary: Retrieves a doctypeConfiguration's list of datapoints
      description: Retrieves a doctypeConfiguration's list of datapoints identified
        by its typology
      operationId: getDocTypeConfigurationDatapoints
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: subtype
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: path
        required: true
        schema:
          type: string
      - name: language
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Section'
  /api/configurations/stage/{type}/{subtype}/{country}/{language}/attributes:
    get:
      tags:
      - doctypeConfiguration
      summary: Retrieves a doctypeConfiguration's list of attributes
      description: Retrieves a doctypeConfiguration's list of attributes identified
        by its typology
      operationId: getDocTypeConfigurationAttributes
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: subtype
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: path
        required: true
        schema:
          type: string
      - name: language
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute'
  /api/operation/{identifier}:
    get:
      tags:
      - operation
      summary: Gets operation by id.
      description: Gets operation by id.
      operationId: get_2
      parameters:
      - name: headers
        in: header
        required: true
        schema:
          type: object
          properties:
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
            lastModified:
              type: integer
              format: int64
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            accessControlRequestMethod:
              type: string
              enum:
              - GET
              - HEAD
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
              - TRACE
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            bearerAuth:
              type: string
              writeOnly: true
            cacheControl:
              type: string
            connection:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                displayName:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                language:
                  type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            origin:
              type: string
            pragma:
              type: string
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            location:
              type: string
              format: uri
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    hostAddress:
                      type: string
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  displayName:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  language:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
    delete:
      tags:
      - operation
      summary: Delete operation by id.
      description: Delete ocr params by id.
      operationId: deleteOperation
      parameters:
      - name: headers
        in: header
        required: true
        schema:
          type: object
          properties:
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
            lastModified:
              type: integer
              format: int64
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            accessControlRequestMethod:
              type: string
              enum:
              - GET
              - HEAD
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
              - TRACE
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            bearerAuth:
              type: string
              writeOnly: true
            cacheControl:
              type: string
            connection:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                displayName:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                language:
                  type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            origin:
              type: string
            pragma:
              type: string
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            location:
              type: string
              format: uri
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    hostAddress:
                      type: string
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  displayName:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  language:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The operation was deleted successfully
          content:
            text/plain:
              schema:
                type: string
  /api/operation/{identifier}/addResource:
    put:
      tags:
      - operation
      summary: Update a operation to add a resource
      description: Update an existing operation to add a resource
      operationId: addResource
      parameters:
      - name: headers
        in: header
        required: true
        schema:
          type: object
          properties:
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
            lastModified:
              type: integer
              format: int64
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            accessControlRequestMethod:
              type: string
              enum:
              - GET
              - HEAD
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
              - TRACE
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            bearerAuth:
              type: string
              writeOnly: true
            cacheControl:
              type: string
            connection:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                displayName:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                language:
                  type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            origin:
              type: string
            pragma:
              type: string
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            location:
              type: string
              format: uri
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    hostAddress:
                      type: string
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  displayName:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  language:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The operation was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
  /api/operation/index:
    post:
      tags:
      - operation
      summary: Create operation.
      description: Create operation.
      operationId: index_2
      parameters:
      - name: headers
        in: header
        required: true
        schema:
          type: object
          properties:
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
            lastModified:
              type: integer
              format: int64
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            accessControlRequestMethod:
              type: string
              enum:
              - GET
              - HEAD
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
              - TRACE
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            bearerAuth:
              type: string
              writeOnly: true
            cacheControl:
              type: string
            connection:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                displayName:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                language:
                  type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            origin:
              type: string
            pragma:
              type: string
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            location:
              type: string
              format: uri
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    hostAddress:
                      type: string
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  displayName:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  language:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Operation'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The operation was inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
  /api/operation/update:
    put:
      tags:
      - operation
      summary: Update a operation.
      description: Update an existing operation.
      operationId: update_1
      parameters:
      - name: headers
        in: header
        required: true
        schema:
          type: object
          properties:
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
            lastModified:
              type: integer
              format: int64
            date:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            accessControlRequestMethod:
              type: string
              enum:
              - GET
              - HEAD
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
              - TRACE
            acceptCharset:
              type: array
              items:
                type: object
                properties:
                  registered:
                    type: boolean
            allow:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            bearerAuth:
              type: string
              writeOnly: true
            cacheControl:
              type: string
            connection:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            contentLanguage:
              type: object
              properties:
                displayName:
                  type: string
                script:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                language:
                  type: string
            etag:
              type: string
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            ifNoneMatch:
              type: array
              items:
                type: string
            ifUnmodifiedSince:
              type: integer
              format: int64
            origin:
              type: string
            pragma:
              type: string
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            location:
              type: string
              format: uri
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    canonicalHostName:
                      type: string
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    linkLocalAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    hostAddress:
                      type: string
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  displayName:
                    type: string
                  script:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  language:
                    type: string
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                type: string
                enum:
                - GET
                - HEAD
                - POST
                - PUT
                - PATCH
                - DELETE
                - OPTIONS
                - TRACE
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            accessControlRequestHeaders:
              type: array
              items:
                type: string
            empty:
              type: boolean
          additionalProperties:
            type: array
            items:
              type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Operation'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The operation was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
  /api/timetraces/resource/{resourceId}:
    get:
      tags:
      - timetrace
      summary: Retrieves timetraces by resource id
      description: Retrieves a paginated list of timetraces identified by their resource
        id
      operationId: getTimeTraceByResourceId
      parameters:
      - name: page
        in: query
        description: Page to check (starting from 0).
        allowEmptyValue: true
        example: 1
        schema:
          type: number
          format: integer
      - name: size
        in: query
        description: Number of items per page.
        allowEmptyValue: true
        example: 25
        schema:
          type: number
          format: integer
      - name: resourceId
        in: path
        description: Identifier of timetrace resource (UUID)
        required: true
        schema:
          type: string
        example: 37375e9e-b7e8-470e-bf14-55d453f640a5
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTrace'
  /api/timetraces/{id}:
    get:
      tags:
      - timetrace
      summary: Gets a timetrace by id
      description: Gets a timetrace by its identifier
      operationId: getTimeTraceById
      parameters:
      - name: id
        in: path
        description: Identifier of timetrace (UUID)
        required: true
        schema:
          type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The request was succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrace'
    delete:
      tags:
      - timetrace
      summary: Delete a timetrace by id
      description: Delete a timetrace by its identifier
      operationId: deleteTimeTraceResource
      parameters:
      - name: id
        in: path
        description: Identifier of timetrace (UUID)
        required: true
        schema:
          type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The timetrace was deleted successfully
  /api/timetraces:
    put:
      tags:
      - timetrace
      summary: Update an existing timetrace
      description: Update an existing timetrace
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrace'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: The timetrace was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrace'
    post:
      tags:
      - timetrace
      summary: Post a timetrace
      description: Persists a new timetrace
      operationId: index_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrace'
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        201:
          description: The timetrace was inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrace'
  /api/profile-info:
    get:
      operationId: getActiveProfiles
      responses:
        401:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        409:
          description: The resource already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        500:
          description: There was some unexpected exception
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        400:
          description: An input parameter is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        404:
          description: The resource couldn't be found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        403:
          description: You are not allowed to run this service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        405:
          description: The endpoint exists but this method is not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorIM'
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileInfoResponse'
components:
  schemas:
    ErrorIM:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp when the error occured
          format: date-time
        errorCode:
          pattern: ^\d{4}-\d{3}$
          type: string
          description: |-
            Error code. The error codes are formed with the following structure:
            <service code>-<specific error code>
            For example: 8002-404 means there was an error in pipeline executor (8002) caused by an resource manager not found (404)
          example: 8002-404
        description:
          type: string
          description: Description of the error occured
          example: Resource manager service not found
        additionalData:
          type: string
          description: Additional information about the error. If no other information
            is explicitly provided, it may contain a stack trace.
          example: The resource manager returned a 503 error
    DatapointType:
      required:
      - name
      - regex
      type: object
      properties:
        id:
          type: string
          description: Identifier of datapoint type (UUID)
          format: UUID
          example: c9c7e7ed-887b-4156-a79e-35e3a0ed8d58
        name:
          type: string
          description: Name of the datapoint type
          example: date
        regex:
          uniqueItems: true
          type: array
          description: List of regex that validates this datapoint type
          items:
            type: string
            description: List of regex that validates this datapoint type
      description: A datapoint type structure
    BarcodeParams:
      type: object
      properties:
        type:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            description: Types of barcodes
            example: '["BT_EAN13","BT_EAN8"]'
            default: BT_Autodetect
            enum:
            - BT_Unknown
            - BT_Code39
            - BT_Interleaved25
            - BT_EAN13
            - BT_Code128
            - BT_EAN8
            - BT_PDF417
            - BT_Codabar
            - BT_UPCE
            - BT_Industrial25
            - BT_IATA25
            - BT_Matrix25
            - BT_Code93
            - BT_PostNet
            - BT_UCC128
            - BT_Patch
            - BT_Aztec
            - BT_DataMatrix
            - BT_QRCode
            - BT_UPCA
            - BT_MaxiCode
            - BT_Code32
            - BT_FullAscii
            - BT_IntelligentMail
            - BT_Autodetect
        orientation:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            description: Types of barcode orientation
            example: '["BO_Down_To_Top","BO_Left_To_Right"]'
            default: BO_Autodetect
            enum:
            - BO_Unknown
            - BO_Left_To_Right
            - BO_Down_To_Top
            - BO_Right_To_Left
            - BO_Top_To_Down
            - BO_Autodetect
        minRatioToTextHeight:
          type: number
          description: Defines the minimal acceptable height of the barcode in relation
            to the average letters height
          format: double
          example: 147483647
          default: -1
        codePage:
          type: string
          description: Defines the minimal acceptable height of the barcode in relation
            to the average letters height
          example: CP_Latin
          default: CP_Null
          enum:
          - CP_Null
          - CP_Latin
          - CP_Cyrillic
          - CP_EasternEuropean
          - CP_Baltic
          - CP_Turkish
          - CP_US_MSDOS
          - CP_LatinI_MSDOS
          - CP_Russian_MSDOS
          - CP_Baltic_MSDOS
          - CP_Turkish_IBM
          - CP_Slavic_MSDOS
          - CP_Greek
          - CP_Greek_737
          - CP_Greek_869
          - CP_Latin_ISO
          - CP_EasternEuropean_ISO
          - CP_Turkish_ISO
          - CP_Baltic_ISO
          - CP_Cyrillic_ISO
          - CP_Greek_ISO
          - CP_KOI8
          - CP_Tatar
          - CP_Tatar_MSDOS
          - CP_Roman_Macintosh
          - CP_Greek_Macintosh
          - CP_Cyrillic_Macintosh
          - CP_Ukrainian_Macintosh
          - CP_Latin2_Macintosh
          - CP_Icelandic_Macintosh
          - CP_Turkish_Macintosh
          - CP_Croatian_Macintosh
          - CP_Armenian
          - CP_Armenian_MSDOS
          - CP_Armenian_Macintosh
          - CP_Hebrew
          - CP_Hebrew_MSDOS
          - CP_Hebrew_Macintosh
          - CP_Hebrew_ISO
          - CP_Latin5_ISO
          - CP_Cyrillic_MSDOS
          - CP_Bashkir
          - CP_Chinese_Simpl_GB
          - CP_Chinese_Simpl_Mac
          - CP_Chinese_Trad_Big
          - CP_Chinese_Trad_Mac
          - CP_Japan_Mac
          - CP_Japan_SJIS
          - CP_Korean
          - CP_Korean_Johab
          - CP_Korean_Mac
          - CP_Mathematical
          - CP_Digits
          - CP_Thai
          - CP_Thai_Macintosh
          - CP_Vietnamese
        containsBinaryData:
          type: boolean
          description: Defines the way binary data is represented in the recognized
            text
          example: false
          default: false
        enableAdvancedExtractionMode:
          type: boolean
          description: Defines if the advanced mode of barcode extraction is turned
            on for two-dimensional barcodes
          example: false
          default: false
        hasChecksum:
          type: boolean
          description: Specifies whether the barcode being recognized must be interpreted
            as the barcode of the same type but with a check sum
          example: false
          default: false
        isCode39WithoutAsterisk:
          type: boolean
          description: Specifies that the Code 39 barcode being recognized has no
            start and stop symbol, the asterisk "*"
          example: false
          default: false
        supplemetType:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            description: Types of barcode supplements
            example: '["BS_Void","BS_2Digits"]'
            default: BS_Autodetect
            enum:
            - BS_Void
            - BS_2Digits
            - BS_5Digits
            - BS_Autodetect
      description: Provides access to the subset of page processing parameters, affecting
        the process of barcode blocks recognition
    CleanNoiseStrategy:
      type: object
      properties:
        apply:
          type: boolean
          description: Defines whether to apply the Noise cleanser
          example: false
          default: false
        threshold:
          type: number
          description: Defines the threshold limit to apply the Noise cleanser
          example: 0.5
          default: 0
      description: Cleanser Noise Strategy
    CleanserStrategy:
      type: object
      properties:
        cleanNoiseStrategy:
          $ref: '#/components/schemas/CleanNoiseStrategy'
        suggestionsStrategy:
          $ref: '#/components/schemas/SuggestionsStrategy'
      description: Cleanser Strategy
    DocumentConversionConfig:
      type: object
      properties:
        conversionMode:
          type: string
          description: Conversion mode
          example: TO_PDF
          default: TO_TXT
          enum:
          - TO_TXT
          - TO_HTML
          - TO_PDF
        useOpenOfficeForDocx:
          type: boolean
          description: Defines if using OpenOffice when converting Docx documents
          example: false
          default: false
      description: Document Conversion Mode
    DocumentProcessingParams:
      type: object
      properties:
        performSynthesis:
          type: boolean
          description: Specifies if document synthesis is to be performed
          example: true
        pageProcessingParams:
          $ref: '#/components/schemas/PageProcessingParams'
        splittingParams:
          $ref: '#/components/schemas/PageSplittingParams'
        synthesisParamsForDocument:
          $ref: '#/components/schemas/SynthesisParamsForDocument'
      description: Document Processing Parameters
    DocumentStructureDetectionParams:
      type: object
      properties:
        classifySeparators:
          type: boolean
          description: Defines if additional properties of separators are detected
            during document synthesis
          example: true
          default: true
        detectCaptions:
          type: boolean
          description: Defines if the captions are detected during document synthesis
          example: true
          default: true
        detectColumns:
          type: boolean
          description: Defines if the columns are detected during document synthesis
          example: true
          default: true
        detectFootnotes:
          type: boolean
          description: Defines if the footnotes are detected during document synthesis
          example: true
          default: true
        detectHeadlines:
          type: boolean
          description: Defines if the headlines are detected during document synthesis
          example: true
          default: true
        detectLists:
          type: boolean
          description: Defines if the lists are detected during document synthesis
          example: true
          default: true
        detectOverflowingParagraphs:
          type: boolean
          description: Defines if the overflowing paragraphs are detected during document
            synthesis
          example: true
          default: true
        detectRunningTitles:
          type: boolean
          description: Defines if the running titles are detected during document
            synthesis
          example: true
          default: true
        detectTableOfContents:
          type: boolean
          description: Defines if the table of contents is detected during document
            synthesis
          example: true
          default: true
      description: Document Structure Detention Parameters
    FinereaderConfig:
      type: object
      properties:
        prepareImageMode:
          $ref: '#/components/schemas/PrepareImageMode'
        documentProcessingParams:
          $ref: '#/components/schemas/DocumentProcessingParams'
        xmlExportParams:
          $ref: '#/components/schemas/XMLExportParams'
        pdfExportParams:
          $ref: '#/components/schemas/PDFExportParams'
        predefinedProfile:
          type: string
          description: This method loads one of the predefined profiles
          example: DOCUMENT_CONVERSION_ACCURACY
          enum:
          - DocumentArchiving_Accuracy
          - DocumentArchiving_Speed
          - BookArchiving_Accuracy
          - BookArchiving_Speed
          - DocumentConversion_Accuracy
          - DocumentConversion_Speed
          - TextExtraction_Accuracy
          - TextExtraction_Speed
          - FieldLevelRecognition
          - BarcodeRecognition_Accuracy
          - BarcodeRecognition_Speed
          - BusinessCardsProcessing
        pageFlushingPolicy:
          type: string
          description: The modes of working with document pages
          example: PFP_KeepInMemory
          enum:
          - PFP_KeepInMemory
          - PFP_FlushToDisk
          - PFP_Auto
      description: FineReader configuration
    FontFormattingDetectionParams:
      type: object
      properties:
        detectBold:
          type: boolean
          description: Defines if boldface is detected during synthesis
          example: true
          default: true
        detectItalic:
          type: boolean
          description: Defines if italic typeface is detected during synthesis
          example: true
          default: true
        detectSubscriptsSuperscripts:
          type: boolean
          description: Defines if subscript and superscript are detected during synthesis
          example: true
          default: true
        detectUnderlineStrikeout:
          type: boolean
          description: Defines if underline and strikeout are detected during synthesis
          example: true
          default: true
        detectSmallCaps:
          type: boolean
          description: Defines if small capital letters are detected during synthesis
          example: true
          default: true
        detectDropCaps:
          type: boolean
          description: Defines if drop capitals are detected during synthesis
          example: true
          default: true
        detectFontFamily:
          type: boolean
          description: Defines if font name is detected during synthesis
          example: true
          default: true
        detectFontSize:
          type: boolean
          description: Defines if font size is detected during synthesis
          example: true
          default: true
        detectSerifs:
          type: boolean
          description: Defines if serif is detected during synthesis
          example: true
          default: true
        detectScaling:
          type: boolean
          description: Defines if scaling is detected during synthesis
          example: true
          default: true
        detectSpacing:
          type: boolean
          description: Defines if spacing is detected during synthesis
          example: true
          default: true
        monospaceDetectionMode:
          type: string
          description: Defines the mode of monospace font detection
          example: MDM_Auto
          default: MDM_Auto
          enum:
          - MDM_Auto
          - MDM_NotMonospace
          - MDM_Monospace
          - MDM_Ignore
      description: Specifies additional parameters of font formatting detection at
        the stage of page synthesis
    ObjectsExtractionParams:
      type: object
      properties:
        fastObjectsExtraction:
          type: boolean
          description: Enables fast object extraction
          example: false
          default: false
        prohibitColorImage:
          type: boolean
          description: Tells ABBYY FineReader Engine to use only black-and-white plane
            during objects extraction
          example: false
          default: false
        sourceContentReuseMode:
          type: string
          description: Specifies how to use the text and image layers of the source
            PDF file
          example: CRM_Auto
          default: CRM_Auto
          enum:
          - CRM_Auto
          - CRM_DoNotReuse
          - CRM_ContentOnly
        removeGarbage:
          type: boolean
          description: Specifies if garbage (excess dots that are smaller than a certain
            size) is to be removed from the image during objects extraction
          example: false
          default: false
        removeTexture:
          type: boolean
          description: Tells ABBYY FineReader Engine to remove the background noise
            from a temporary image used for recognition
          example: true
          default: true
        detectMatrixPrinter:
          type: boolean
          description: Specifies if the text printed on matrix printer is detected
            during objects extraction
          example: true
          default: true
        detectPorousText:
          type: boolean
          description: Specifies if the regions with porous text are detected during
            objects extraction
          example: true
          default: true
        detectTextOnPictures:
          type: boolean
          description: Tells ABBYY FineReader Engine to detect all text on an image,
            including text embedded into images
          example: false
          default: false
        enableAggressiveTextExtraction:
          type: boolean
          description: Tells ABBYY FineReader Engine to try to extract as much text
            on the image as possible
          example: false
          default: false
        prohibitDottedSeparators:
          type: boolean
          description: Tells ABBYY FineReader Engine to try to ignore dotted separators
          example: false
          default: false
      description: Provides access to the subset of page processing parameters that
        affect extraction of objects
    OcrParams:
      required:
      - country
      - cropMargins
      - dpiThreshold
      - extendTables
      - forceResize
      - id
      - isEmail
      - joinTables
      - language
      - pdfBoxTextExtraction
      - pdfTextToImage
      - processor
      - rotateVerticalText
      - subtype
      - suspiciousThreshold
      - textExtractionStrategy
      - type
      type: object
      properties:
        id:
          type: string
          description: Document configuration ID
          example: SeguridadSocial
        type:
          type: string
          description: Document type
          example: SeguridadSocial
        subtype:
          type: string
          description: Document subtype
          example: notasimple
        country:
          type: string
          description: Document country
          example: España
        language:
          type: string
          description: Document language
          example: SPANISH
        pdfTextToImage:
          type: string
          description: This parameter enables PDF to TIFF or PDF_IMAGE conversion
          example: PDF_IMAGE
          enum:
          - Disabled
          - TIFF
          - PDF_IMAGE
        pdfBoxTextExtraction:
          type: boolean
          description: This parameter enables PDFBOX text extraction before ABBYY
            process
          example: true
        joinTables:
          type: boolean
          description: This parameter enables joining tables horizontally that are
            aligned
          example: false
        rotateVerticalText:
          type: boolean
          description: This parameter enables rotating vertical texts
          example: false
        extendTables:
          type: boolean
          description: This parameter enables extending table lines to merge separate
            tables
          example: false
        processor:
          type: string
          description: This parameter defines the OCR system to use
          example: TESSERACT
          enum:
          - ABBYY
          - TESSERACT
        isEmail:
          type: boolean
          description: This parameter will be evaluated for (in positive case) email
            extraction processing
          example: false
        cropMargins:
          type: boolean
          description: This parameter enables cropping document margins
          example: false
        pdfboxStripper:
          type: string
          description: This parameter defines the pdfbox text stripper with pdfBoxTextExtraction
            or FROM_TRANSFORMED_PDF strategy
          example: improvedLayout
          default: defaultExtractor
          enum:
          - defaultExtractor
          - layout
          - improvedLayout
        finereaderConfig:
          $ref: '#/components/schemas/FinereaderConfig'
        tesseractConfig:
          $ref: '#/components/schemas/TesseractConfig'
        textExtractionStrategy:
          type: string
          description: This parameter sets the strategy to follow in order to extract
            the plain text after abbyy processing
          example: FROM_TRANSFORMED_PDF
          enum:
          - FROM_XML
          - FROM_TRANSFORMED_PDF
          - FROM_OCR
          - FROM_XML_TO_HTML
          - FROM_XML_TO_HTML_LEFT_RIGHT
        cleanserStrategy:
          $ref: '#/components/schemas/CleanserStrategy'
        documentConversionConfig:
          $ref: '#/components/schemas/DocumentConversionConfig'
        dpiThreshold:
          minimum: 0
          type: integer
          description: This parameter sets the minimum document DPI to be accepted
            for processing
          format: int32
          example: 300
          default: 300
        forceResize:
          type: boolean
          description: This parameter enables resize of the document to the dpi threshold
            value
          example: false
          default: false
        suspiciousThreshold:
          maximum: 1
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: This parameter sets the maximum suspicious character ratio
            for a document to be processed
          format: double
          example: 0.2
          default: 0.2
        email:
          type: boolean
          writeOnly: true
      description: OCR configuration parameters
    OrientationDetectionParams:
      type: object
      properties:
        orientationDetectionMode:
          type: string
          description: Specifies the mode of page orientation detection
          example: ODM_Normal
          default: ODM_Normal
          enum:
          - ODM_Fast
          - ODM_Normal
          - ODM_Thorough
        prohibitClockwiseRotation:
          type: boolean
          description: Disables clockwise page rotation when selecting the page orientation
          example: false
          default: false
        prohibitCounterclockwiseRotation:
          type: boolean
          description: Disables counterclockwise page rotation when selecting the
            page orientation
          example: false
          default: false
        prohibitUpsidedownRotation:
          type: boolean
          description: Disables upside-down page rotation when selecting the page
            orientation
          example: false
          default: false
      description: Provides access to the parameters of orientation detection
    PDFExportParams:
      type: object
      properties:
        scenario:
          type: string
          description: Specifies the scenario of export to PDF (PDF/A) format
          example: PES_Balanced
          default: PES_Balanced
          enum:
          - PES_MaxQuality
          - PES_Balanced
          - PES_MinSize
          - PES_MaxSpeed
        pdfaComplianceMode:
          type: string
          description: Specifies the format of export
          example: PCM_None
          default: PCM_None
          enum:
          - PCM_None
          - PCM_Pdfa_1a
          - PCM_Pdfa_1b
          - PCM_Pdfa_2a
          - PCM_Pdfa_2u
          - PCM_Pdfa_3a
          - PCM_Pdfa_3u
        textExportMode:
          type: string
          description: Specifies the mode of export of recognized text into PDF (PDF/A)
            format
          example: PEM_ImageOnText
          default: PEM_ImageOnText
          enum:
          - PEM_TextWithPictures
          - PEM_TextOnImage
          - PEM_ImageOnText
          - PEM_ImageOnly
          - PEM_TextOnly
        mrcMode:
          type: string
          description: Specifies the mode of using Mixed Raster Content for output
            PDF (PDF/A) file
          example: MRC_Auto
          default: MRC_Auto
          enum:
          - MRC_Auto
          - MRC_Always
          - MRC_Disable
        colority:
          type: string
          description: Allows you to keep color of the output PDF (PDF/A) file or
            save it in gray or black-and- white
          example: PCM_KeepColority
          default: PCM_KeepColority
          enum:
          - PCM_KeepColority
          - PCM_ForceToGray
          - PCM_ForceToBw
        correctColorDepth:
          type: boolean
          description: Tells ABBYY FineReader Engine to correct color depth of the
            document
          example: true
          default: true
        resolution:
          type: integer
          description: Specifies the picture resolution in dpi
          format: int32
          example: 300
          default: 300
        resolutionType:
          type: string
          description: Defines how to use the value of the picture resolution specified
            in the Resolution property
          example: PRT_Desired
          default: PRT_Desired
          enum:
          - PRT_Desired
          - PRT_Exact
          - PRT_Source
      description: Parameters in ABBYY FineReader Engine for exporting the recognized
        text into PDF (PDF/A) format
    PageAnalysisParams:
      type: object
      properties:
        detectText:
          type: boolean
          description: Specifies if text areas are detected during layout analysis
          example: true
          default: true
        enableTextExtractionMode:
          type: boolean
          description: Specifies if text blocks can be located anywhere on the page
          example: false
          default: false
        detectTables:
          type: boolean
          description: Specifies if the tables are detected during layout analysis
          example: true
          default: true
        tableAnalysisParams:
          $ref: '#/components/schemas/TableAnalysisParams'
        aggressiveTableDetection:
          type: boolean
          description: Specifies if FineReader Engine tries to find as many tables
            as possible on the page
          example: false
          default: false
        detectBarcodes:
          type: boolean
          description: Specifies whether barcodes are detected, and accordingly barcode
            blocks created, during layout analysis
          example: false
          default: false
        barcodeParams:
          $ref: '#/components/schemas/BarcodeParams'
        detectSeparators:
          type: boolean
          description: Specifies whether separators are detected during layout analysis
          example: true
          default: true
        detectPictures:
          type: boolean
          description: Specifies whether pictures are detected during layout analysis
          example: true
          default: true
        detectVectorGraphics:
          type: boolean
          description: Specifies whether vector pictures are detected during layout
            analysis
          example: true
          default: true
        detectMultipleBusinessCards:
          type: boolean
          description: Specifies whether a processing page can contain several business
            cards
          example: false
          default: false
        noShadowsMode:
          type: boolean
          description: Tells ABBYY FineReader Engine to presume that an image has
            no shadows from scanning
          example: false
          default: false
        paperSizeDetectionMode:
          type: string
          description: This property indicates if the whole preprocessed image can
            contain information for analysis
          example: PSDM_Auto
          default: PSDM_Auto
          enum:
          - PSDM_Auto
          - PSDM_Unknown
          - PSDM_CloseToImageSize
        detectVerticalEuropeanText:
          type: boolean
          description: Tells ABBYY FineReader Engine to look for vertically oriented
            text in no CJK languages
          example: false
          default: false
        prohibitCJKColumns:
          type: boolean
          description: Tells ABBYY FineReader Engine to ignore the possibility of
            vertical text for CJK languages
          example: false
          default: false
        prohibitDoublePageMode:
          type: boolean
          description: Tells ABBYY FineReader Engine to presume that an image is not
            a book double page
          example: false
          default: false
        prohibitModelAnalysis:
          type: boolean
          description: Tells FineReader Engine if model analysis for page layout should
            be performed
          example: false
          default: false
        collectPdfExportData:
          type: boolean
          description: Tells FineReader Engine to collect data for PDF export during
            layout analysis
          example: false
          default: false
      description: Provides access to the subset of page processing parameters that
        affect the process of page analysis
    PagePreProcessingParams:
      type: object
      properties:
        correctInvertedImage:
          type: boolean
          description: Tells ABBYY FineReader Engine to detect whether the image is
            inverted (white text against black background)
          example: false
          default: false
        correctOrientation:
          type: boolean
          description: Tells ABBYY FineReader Engine to rotate the image if orientation
            is not the one expected
          example: false
          default: false
        correctShadowsAndHighlights:
          type: string
          description: Modes in ABBYY FineReader Engine to correct shadows and highlights
          example: TSPV_Auto
          default: TSPV_Auto
          enum:
          - TSPV_Yes
          - TSPV_No
          - TSPV_Auto
        correctSkew:
          type: string
          description: Modes in ABBYY FineReader Engine to correct image skew during
            page preprocessing
          example: TSPV_Auto
          default: TSPV_Auto
          enum:
          - TSPV_Yes
          - TSPV_No
          - TSPV_Auto
        correctSkewMode:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            description: Specifies the modes of skew correction
            example: '["CSM_CorrectSkewByHorizontalText","CSM_CorrectSkewByVerticalText"]'
            default: CSM_CorrectSkewByHorizontalText
            enum:
            - CSM_CorrectSkewByBlackSquaresHorizontally
            - CSM_CorrectSkewByBlackSquaresVertically
            - CSM_CorrectSkewByHorizontalLines
            - CSM_CorrectSkewByVerticalLines
            - CSM_CorrectSkewByHorizontalText
            - CSM_CorrectSkewByVerticalText
        geometryCorrectionMode:
          type: string
          description: Specifies whether geometrical distortions should be removed
            during page preprocessing
          example: GCM_Auto
          default: GCM_Auto
          enum:
          - GCM_Correct
          - GCM_DontCorrect
          - GCM_Auto
        orientationDetectionParams:
          $ref: '#/components/schemas/OrientationDetectionParams'
        resolutionCorrectionMode:
          type: string
          description: Specifies whether resolution of the image should be corrected
            during page preprocessing
          example: RCM_Auto
          default: RCM_Auto
          enum:
          - RCM_Correct
          - RCM_DontCorrect
          - RCM_Auto
      description: Provides access to the subset of page processing parameters that
        affect the process of page preprocessing
    PageProcessingParams:
      type: object
      properties:
        performPreprocessing:
          type: boolean
          description: Specifies if page preprocessing is to be performed
          example: true
          default: true
        pagePreprocessingParams:
          $ref: '#/components/schemas/PagePreProcessingParams'
        prohibitColorObjectsAltProcessing:
          type: boolean
          description: Specifies if color objects must be filtered out on the image
            before layout analysis and recognition
          example: false
          default: false
        performAnalysis:
          type: boolean
          description: Specifies if page analysis is to be performed
          example: false
          default: false
        pageAnalysisParams:
          $ref: '#/components/schemas/PageAnalysisParams'
        objectsExtractionParams:
          $ref: '#/components/schemas/ObjectsExtractionParams'
        performRecognition:
          type: boolean
          description: Specifies if recognition is to be performed
          example: false
          default: false
        recognizerParams:
          $ref: '#/components/schemas/RecognizerParams'
        synthesisParamsForPage:
          $ref: '#/components/schemas/SynthesisParamsForPage'
      description: Specifies the processing parameters for each page of the document
    PageSplittingParams:
      type: object
      properties:
        splitType:
          type: string
          description: Specifies the type of the page split which should be performed
          example: PST_None
          default: PST_None
          enum:
          - PST_None
          - PST_DoublePageSplit
          - PST_BusinessCardSplit
      description: Specifies the page splitting parameters
    PrepareImageMode:
      type: object
      properties:
        rotationTypeEnum:
          type: string
          description: This property specifies the rotation angle to apply to the
            image during preparation
          example: RT_NoRotation
          default: RT_NoRotation
          enum:
          - RT_UnknownRotation
          - RT_NoRotation
          - RT_Clockwise
          - RT_Counterclockwise
          - RT_Upsidedown
        correctSkew:
          type: boolean
          description: This property set to TRUE tells ABBYY FineReader Engine to
            correct skew during image preparation
          example: true
          default: true
        correctSkewMode:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            description: List with the modes of skew correction
            example: '["CSM_CorrectSkewByHorizontalText","CSM_CorrectSkewByVerticalText"]'
            default: CSM_CorrectSkewByHorizontalText
            enum:
            - CSM_CorrectSkewByBlackSquaresHorizontally
            - CSM_CorrectSkewByBlackSquaresVertically
            - CSM_CorrectSkewByHorizontalLines
            - CSM_CorrectSkewByVerticalLines
            - CSM_CorrectSkewByHorizontalText
            - CSM_CorrectSkewByVerticalText
        backgroundFillingColor:
          type: integer
          description: Specifies the color used for filling the areas which are added
            to the image after skew correction
          format: int32
          example: 16777215
          default: -1
        invertImage:
          type: boolean
          description: This property set to TRUE tells ABBYY FineReader Engine to
            invert colors of the prepared image
          example: false
          default: false
        mirrorImage:
          type: boolean
          description: This property set to TRUE tells ABBYY FineReader Engine to
            mirror the prepared image around its vertical axis
          example: false
          default: false
        enhanceLocalContrast:
          type: boolean
          description: Specifies whether the local contrast of the image should be
            increased
          example: false
          default: false
        photoProcessingMode:
          type: string
          description: Specifies whether the processing image should be treated as
            a photo
          example: PPM_Auto
          default: PPM_Auto
          enum:
          - PPM_TreatAsPhoto
          - PPM_TreatAsNonPhoto
          - PPM_Auto
        keepOriginalCoordinatesInfo:
          type: boolean
          description: Specifies whether the information about pixel coordinates in
            the current modification state should be saved
          example: true
          default: true
        autoOverwriteResolution:
          type: boolean
          description: Specifies whether resolution of the prepared image should be
            automatically overwritten
          example: true
          default: true
        overwriteResolution:
          type: boolean
          description: Allows you to overwrite resolution of the prepared image
          example: false
          default: false
        getxResolutionToOverwrite:
          type: integer
          description: Specifies the horizontal resolution of the original image in
            dpi
          format: int32
          example: 300
          default: 300
        getyResolutionToOverwrite:
          type: integer
          description: Specifies the vertical resolution of the original image in
            dpi
          format: int32
          example: 300
          default: 300
        discardColorImage:
          type: boolean
          description: Tells ABBYY FineReader Engine to leave only black-and-white
            plane in the prepared image
          example: false
          default: false
        useFastBinarization:
          type: boolean
          description: Tells ABBYY FineReader Engine will use algorithms for fast
            image binarization
          example: false
          default: false
        imageCompression:
          type: string
          description: How an image should be compressed during conversion to the
            internal format
          example: IC_Auto
          default: IC_Auto
          enum:
          - IC_NoCompression
          - IC_Compress
          - IC_Auto
        createPreview:
          type: boolean
          description: Tells ABBYY FineReader Engine to create preview page for the
            prepared imag
          example: false
          default: false
        previewHeight:
          type: integer
          description: Specifies the height in pixels of the preview page
          format: int32
          example: 90
          default: 90
        previewWidth:
          type: integer
          description: Specifies the width in pixels of the preview page
          format: int32
          example: 64
          default: 64
      description: Contains different attributes specifying how an image will be prepared
        during conversion to the internal format
    RecognizerParams:
      type: object
      properties:
        languageDetectionMode:
          type: string
          description: Manages automatic language detection
          example: TSPV_Auto
          default: TSPV_Auto
          enum:
          - TSPV_Yes
          - TSPV_No
          - TSPV_Auto
        textTypes:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            description: List with the text types used for recognition
            example: '["TT_Normal"]'
            default: TT_Matrix
            enum:
            - TT_Normal
            - TT_Typewriter
            - TT_Matrix
            - TT_Index
            - TT_Handprinted
            - TT_OCR_A
            - TT_OCR_B
            - TT_MICR_E13B
            - TT_MICR_CMC7
            - TT_Gothic
            - TT_Receipt
        balancedMode:
          type: boolean
          description: Defines if the recognition will run in balanced mode
          example: false
          default: false
        fastMode:
          type: boolean
          description: Defines if fast mode is enabled
          example: false
          default: false
        lowResolutionMode:
          type: boolean
          description: Specifies whether a text on an image with low resolution is
            recognized
          example: false
          default: false
        oneLinePerBlock:
          type: boolean
          description: Specifies whether a text will be recognized by one line per
            block
          example: false
          default: false
        oneWordPerLine:
          type: boolean
          description: Specifies whether a text will be recognized as one word per
            line
          example: false
          default: false
        prohibitItalic:
          type: boolean
          description: Specifies whether to recognize letters printed with italic-styled
            font
          example: false
          default: false
        prohibitSubscript:
          type: boolean
          description: Specifies whether to recognize subscript letters
          example: false
          default: false
        prohibitSuperscript:
          type: boolean
          description: Specifies whether to recognize superscript letters
          example: false
          default: false
        prohibitHyphenation:
          type: boolean
          description: Specifies whether to recognize hyphenation from line to line
          example: false
          default: false
        prohibitInterblockHyphenation:
          type: boolean
          description: Specifies whether to recognize hyphenation from block to block
          example: false
          default: false
        caseRecognitionModeEnum:
          type: string
          description: This property specifies the mode of letter case recognition
          example: CRM_AutoCase
          default: CRM_AutoCase
          enum:
          - CRM_AutoCase
          - CRM_SmallCase
          - CRM_CapitalCase
        writingStyleEnum:
          type: string
          description: Provides additional information about handprinted letters writing
            style
          example: WS_Auto
          default: WS_Auto
          enum:
          - WS_Default
          - WS_DetectByLocale
          - WS_American
          - WS_German
          - WS_Russian
          - WS_Polish
          - WS_Thai
          - WS_Japanese
          - WS_Arabic
          - WS_Baltic
          - WS_British
          - WS_Bulgarian
          - WS_Canadian
          - WS_Czech
          - WS_Croatian
          - WS_French
          - WS_Greek
          - WS_Hungarian
          - WS_Italian
          - WS_Romanian
          - WS_Slovak
          - WS_Spanish
          - WS_Turkish
          - WS_Ukrainian
          - WS_Common
          - WS_Chinese
          - WS_Azerbaijan
          - WS_Kazakh
          - WS_Kirgiz
          - WS_Latvian
          - WS_Auto
        fieldMarkingTypeEnum:
          type: string
          description: 'This property specifies the type of marking around letters '
          example: FMT_SimpleText
          default: FMT_SimpleText
          enum:
          - FMT_SimpleText
          - FMT_UnderlinedText
          - FMT_TextInFrame
          - FMT_GrayBoxes
          - FMT_CharBoxSeries
          - FMT_SimpleComb
          - FMT_CombInFrame
          - FMT_PartitionedFrame
        cellsCount:
          type: integer
          description: Specifies the number of character cells in the block
          format: int32
          example: 1
          default: 1
        trainUserPatterns:
          type: boolean
          description: Specifies whether user patterns should be trained during the
            recognition
          example: false
          default: false
        useBuiltInPatterns:
          type: boolean
          description: Specifies whether ABBYY FineReader Engine will use its own
            built-in patterns during the recognition
          example: true
          default: true
        userPatternsFile:
          type: string
          description: Contains the full path to a file of the user pattern used for
            recognition
          example: /home/user/patterns
        errorHighlightLevel:
          type: string
          description: Specifies the level at which the ICharParams::IsSuspicious
            property is set to TRUE for a recognized character
          example: EHL_Standard
          default: EHL_Standard
          enum:
          - EHL_None
          - EHL_Scanty
          - EHL_Standard
          - EHL_Thorough
          - EHL_AllText
        exactConfidenceCalculation:
          type: boolean
          description: Specifies whether character and word confidence will be defined
            more accurately during the recognition
          example: false
          default: false
        saveCharacterRegions:
          type: boolean
          description: Specifies whether the exact characters regions (ICharParams::CharacterRegion)
            are saved
          example: false
          default: false
        saveCharacterRecognitionVariants:
          type: boolean
          description: Specifies whether the variants of characters recognition are
            saved
          example: false
          default: false
        saveWordRecognitionVariants:
          type: boolean
          description: Specifies whether the variants of recognition of a word are
            saved
          example: false
          default: false
      description: Provides access to the subset of page processing parameters that
        affect the process of page recognition
    SuggestionsStrategy:
      type: object
      properties:
        apply:
          type: boolean
          description: Defines whether to apply the Suggestions cleanser
          example: false
          default: false
        threshold:
          type: number
          description: Defines the threshold limit to apply the Suggestions cleanser
          example: 0.5
          default: 0
      description: Cleanser Suggestions Strategy
    SynthesisParamsForDocument:
      type: object
      properties:
        detectDocumentStructure:
          type: boolean
          description: Specifies whether document structure detection should be performed
            while document synthesis
          example: true
          default: true
        documentStructureDetectionParams:
          $ref: '#/components/schemas/DocumentStructureDetectionParams'
        detectFontFormatting:
          type: boolean
          description: Specifies whether font formatting detection should be performed
            while document synthesis
          example: false
          default: false
        fontFormattingDetectionParams:
          $ref: '#/components/schemas/FontFormattingDetectionParams'
        lowMemoryMode:
          type: boolean
          description: Specifies whether low memory mode should be used during document
            synthesis
          example: false
          default: false
        pagePoolSize:
          type: integer
          description: Specifies how many pages can be loaded by document synthesis
            simultaneously
          format: int32
          example: 64
          default: 64
      description: Defines synthesis parameters for document
    SynthesisParamsForPage:
      type: object
      properties:
        paragraphExtractionModeEnum:
          type: string
          description: Specifies the mode of paragraph extraction
          example: PEM_NormalExtraction
          default: PEM_NormalExtraction
          enum:
          - PEM_NormalExtraction
          - PEM_RoughExtraction
          - PEM_SingleLineParagraphsWithSpaceFormatting
          - PEM_SingleLineParagraphsWithWordSeparationOnly
        detectDocumentLinks:
          type: boolean
          description: Defines if document references (e.g. cross-references) are
            detected during page synthesis
          example: true
          default: true
        detectHyperlinks:
          type: boolean
          description: Defines if hyperlinks are detected during page synthesis
          example: true
          default: true
        synthesizeBusinessCards:
          type: boolean
          description: Defines if FineReader Engine tries to find business cards on
            the page during page synthesis
          example: false
          default: false
        detectFontFormattingAtPageLevel:
          type: boolean
          description: Defines if font parameters are detected at the stage of page
            synthesis
          example: false
          default: false
        fontFormattingDetectionParams:
          $ref: '#/components/schemas/FontFormattingDetectionParams'
        detectBackgroundColor:
          type: string
          description: Defines if the background color is detected during page synthesis
          example: TSPV_Yes
          default: TSPV_Auto
          enum:
          - TSPV_Yes
          - TSPV_No
          - TSPV_Auto
        allowGrayBackgroundColor:
          type: string
          description: Defines if the gray color is detected for background
          example: TSPV_Yes
          default: TSPV_Auto
          enum:
          - TSPV_Yes
          - TSPV_No
          - TSPV_Auto
        detectTextColor:
          type: string
          description: Defines if the text color is detected during page synthesis
          example: TSPV_Yes
          default: TSPV_Auto
          enum:
          - TSPV_Yes
          - TSPV_No
          - TSPV_Auto
        allowGrayTextColor:
          type: string
          description: Defines if the gray color is detected for text
          example: TSPV_Yes
          default: TSPV_Auto
          enum:
          - TSPV_Yes
          - TSPV_No
          - TSPV_Auto
        correctDynamicRange:
          type: string
          description: Defines if image colors will be corrected by dynamic range
          example: TSPV_Yes
          default: TSPV_Auto
          enum:
          - TSPV_Yes
          - TSPV_No
          - TSPV_Auto
      description: Defines synthesis params for page
    TableAnalysisParams:
      type: object
      properties:
        detectCellsInversion:
          type: boolean
          description: Defines if the cells inversion is detected during table block
            analysis
          example: true
          default: true
        detectCellsOrientation:
          type: boolean
          description: Defines if the cells orientation is detected during table block
            analysis
          example: true
          default: true
        singleLinePerCell:
          type: boolean
          description: Defines if you only recognize tables with one line of text
            per each cell
          example: false
          default: false
        splitOnlyBySeparators:
          type: boolean
          description: Defines if you only recognize tables with no hidden separators
          example: false
          default: false
      description: Provides access to the subset of page processing parameters that
        affect the process of table analysis
    TesseractConfig:
      type: object
      properties:
        pageSegmentationMode:
          type: string
          description: Page Segmentation mode
          example: PSM_AUTO_OSD
          default: PSM_AUTO_OSD
          enum:
          - PSM_OSD_ONLY
          - PSM_AUTO_OSD
          - PSM_AUTO_ONLY
          - PSM_AUTO
          - PSM_SINGLE_COLUMN
          - PSM_SINGLE_BLOCK_VERT_TEXT
          - PSM_SINGLE_BLOCK
          - PSM_SINGLE_LINE
          - PSM_SINGLE_WORD
          - PSM_CIRCLE_WORD
          - PSM_SINGLE_CHAR
          - PSM_SPARSE_TEXT
          - PSM_SPARSE_TEXT_OSD
          - PSM_COUNT
        ocrEngineMode:
          type: string
          description: OCR Engine mode
          example: OEM_DEFAULT
          default: OEM_DEFAULT
          enum:
          - OEM_LSTM_ONLY
          - OEM_DEFAULT
        languageModel:
          type: string
          description: Language model
          example: STRAIGHT
          default: STRAIGHT
          enum:
          - BEST
          - STRAIGHT
          - FAST
        recognizeTables:
          type: boolean
          description: Specify whether to recognize tables
          example: false
          default: false
        heavyNoiseReduction:
          type: boolean
          description: Specify whether to enable heavy noise reduction mode
          example: false
          default: false
        noiseAreaRatio:
          maximum: 1
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Noise area ratio
          format: double
          example: 0.7
          default: 0.7
        maxNoiseSize:
          maximum: 10
          minimum: 0
          type: integer
          description: Maximum noise size
          format: int32
          example: 0
          default: 0
      description: Tesseract configuration
    XMLExportParams:
      type: object
      properties:
        writeCharacterRecognitionVariants:
          type: boolean
          description: Specifies if collections of variants of characters recognition
            are to be written in a file in XML format
          example: false
        writeCharAttributes:
          type: string
          description: Specifies which character attributes are to be saved in a file
            in XML format
          example: XCA_None
          enum:
          - XCA_None
          - XCA_Ascii
          - XCA_Basic
          - XCA_Extended
        writeCharFormatting:
          type: boolean
          description: Specifies if character formatting is to be saved in a file
            in XML format
          example: false
        writeNondeskewedCoordinates:
          type: boolean
          description: Specifies if character coordinates saved in a file in XML format
            are on a non-deskewed image plane
          example: true
        writeParagraphStyles:
          type: boolean
          description: Specifies whether parameters of paragraph and font styles should
            be written in a file in XML format
          example: false
        writeWordRecognitionVariants:
          type: boolean
          description: Specifies if collections of variants of words recognition are
            to be written in a file in XML format
          example: false
      description: Tuning parameters for recognized text export in XML format
    Pageable:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/Sort'
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    LoggerVM:
      type: object
      properties:
        name:
          type: string
        level:
          type: string
    ConsolidationMetadata:
      required:
      - consolidable
      - country
      - docType
      - language
      - path
      - subtype
      type: object
      properties:
        id:
          type: string
          description: Consolidatioin id
        docType:
          type: string
          description: Type of the consolidated document
          example: SANMX
        subtype:
          type: string
          description: Subtype of the consolidated document
          example: RFC
        language:
          type: string
          description: Language of the consolidated document
          example: SPANISH
        country:
          type: string
          description: Country of the consolidated document
          example: Mexico
        identifierOfSet:
          type: string
          description: Identifier of the set of documents that were consolidated together
          format: uuid
        key:
          type: string
          description: Key of the consolidated attribute
          example: Nombre
        path:
          type: string
          description: |-
            Path to the attribute in the consolidated resource.
            It is automatically calculated by the consolidation module
        description:
          type: string
          description: Description for the consolidation
        attributeValue:
          type: string
          description: Value of the consolidated attribute
          example: Pepe Perez
        attributeIdentifier:
          type: string
          description: Identifier of the consolidated attribute
          format: uuid
        resourceIdentifier:
          type: string
          description: Identifier of the consolidated resource
          format: uuid
        consolidable:
          uniqueItems: true
          type: array
          description: Information about other datapoints that were consolidated with
            this one
          items:
            $ref: '#/components/schemas/ConsolidationMetadataGeneric'
      description: ConsolidationMetadata with the set of consolidables
    ConsolidationMetadataGeneric:
      required:
      - country
      - docType
      - language
      - path
      - subtype
      type: object
      properties:
        id:
          type: string
          description: Consolidatioin id
        docType:
          type: string
          description: Type of the consolidated document
          example: SANMX
        subtype:
          type: string
          description: Subtype of the consolidated document
          example: RFC
        language:
          type: string
          description: Language of the consolidated document
          example: SPANISH
        country:
          type: string
          description: Country of the consolidated document
          example: Mexico
        identifierOfSet:
          type: string
          description: Identifier of the set of documents that were consolidated together
          format: uuid
        key:
          type: string
          description: Key of the consolidated attribute
          example: Nombre
        path:
          type: string
          description: |-
            Path to the attribute in the consolidated resource.
            It is automatically calculated by the consolidation module
        description:
          type: string
          description: Description for the consolidation
        attributeValue:
          type: string
          description: Value of the consolidated attribute
          example: Pepe Perez
        attributeIdentifier:
          type: string
          description: Identifier of the consolidated attribute
          format: uuid
        resourceIdentifier:
          type: string
          description: Identifier of the consolidated resource
          format: uuid
      description: Metadata for the datapoints the parent datapoint conoslidates with
    Attribute:
      type: object
      properties:
        key:
          type: string
          description: Similar to the section label. Human readable name of the attribute.
          example: Name
        description:
          type: string
          description: Description of the attribute.
        path:
          type: string
          description: |-
            Identifies the unique path to the attribute. It has to matches this regexp:
            sections::label@@(?<child>[^:]+(::children::label@@[^:]+)*)::attributes::key@@(?<attr>.+)
          example: sections::label@@PASSPORT::children::label@@Persona::attributes::key@@Nombre
        mandatory:
          type: boolean
          description: Indicates if this attribute is mandatory.
        multiple:
          type: boolean
          description: Indicates if this attribute is an array.
        annotationName:
          type: string
          description: Name of the attribute given within the annotation phase.
          example: NAME
        featureName:
          type: string
          description: Name of the feature given within the annotation phase.
          example: name
        defaultValue:
          type: string
          description: Default value.
          nullable: true
        distance:
          type: string
          nullable: true
        weight:
          type: number
          format: float
          nullable: true
        datatype:
          type: string
          description: Identifier of the datatype. UUID format.
          format: uuid
        langDatatype:
          type: string
          description: Language for the datatype.t
          example: es
        separatorDataType:
          type: string
          description: Separator for the datatype.
          example: comma
        unique:
          type: boolean
          description: Indicates if this attribute is unique.
        originType:
          type: string
          description: |-
            Valid values are:
            - Explicit: the value is not calculated.
            - Inferred: the value is calculated.
        normalizedDateFormat:
          type: string
          description: Date format in case the datapoint is a date to normalize.
          format: date
        normalizedAmountSeparator:
          type: string
          description: Separator type in case the datapoint is a number to normalize.
          example: dot
        normalizeToUppercase:
          type: boolean
          description: Indicates if the attribute is required to uppercase when normalize.
        normalizeToStripDashes:
          type: boolean
          description: Indicates if the attribute is required to normalize to strip
            dashes when normalize.
        reportingMatchStrategy:
          type: string
          description: |-
            Valid values are:
            - PERFECT_MATCH: In case of grammar extraction, it's needed to be a full match to extract this value.
            - SIMILARITY: In case of grammar extraction, it isn't necessary a full match to extract the attribute.
          enum:
          - PERFECT_MATCH
          - SIMILARITY
        similarityThreshold:
          type: number
          description: |-
            In case of SIMILARITY reporting match strategy, it indicates the threshold ti stablish the similarity.
            Values between 0.0 and 1.0.
      description: Contains the final datapoint metadata
    AttributeLocation:
      type: object
      properties:
        id:
          pattern: ^-?\d+$
          type: string
          description: 'The id of the location: this should be filled up by the Data
            Transformer no need for the NLP pipeline to fill up this value'
          example: "1"
        start:
          minimum: 0
          type: integer
          description: The start node of the gate annotation
          format: int64
          example: 16
        end:
          minimum: 0
          type: integer
          description: The end node of the gate annotation
          format: int64
          example: 19
      description: Information about the datapoint location inside the document
    AttributeValidation:
      type: object
      properties:
        validationType:
          type: string
          description: 'What kind of validation was used in the processing of the
            resource: "automatic" if was used an automatic method, "manual" if was
            used a manual one.'
          example: automatic
          enum:
          - MANUAL
          - AUTOMATIC
        valid:
          type: boolean
          description: Boolean flag to indicate that the attribute is valid (automatic
            or manual validation)
        confidence:
          maximum: 1
          minimum: 0
          type: number
          description: Value of confidence that the datapoint is correct. From 0 to
            1
          format: double
          example: 0.9
        supervised:
          type: boolean
          description: (Deprecated 4.0.0)
          deprecated: true
        slaCompliant:
          type: boolean
          description: Boolean flag to indicate that the datapoint confidence reaches
            the sla
        rejectReason:
          type: string
          description: (Deprecated 4.0.0)
          deprecated: true
        supervision:
          type: string
          description: |-
            Value to indicate the status of the datapoint supervision.
            * null - No supervision
            * E - The value has been edited by a supervisor
            * V - The value has been validated
            * C - Deprecated. Original intention was to flag automatic learning correction
          nullable: true
          enum:
          - E
          - V
          - C
      description: Information about the datapoint validation status
    DatapointConsolidationResult:
      type: object
      properties:
        id:
          type: string
          description: Consolidation datapoint id to match this data with the real
            datapoint
          deprecated: true
        datapointId:
          type: string
          description: Consolidation datapoint id to match this data with the real
            datapoint
        resourceId:
          type: string
          description: Id from the resouce that is consolidated
          deprecated: true
        targets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ConsolidationMetadataGeneric'
      description: Information about a specific datapoint consolidation
    Edition:
      type: object
      properties:
        editor:
          type: string
          description: The username of the editor that made the modification of the
            resource
          example: someuser
        creation:
          type: string
          description: The first creation of the data extracted for this resource
          format: date-time
        modified:
          type: string
          description: The last modification date applied on the resource
          format: date-time
        resourceVersion:
          type: integer
          description: (Deprecated 4.0.0 - its not used correctly) The last version
            of the resource (each modification increase sequentially the resource
            version.
          format: int32
          deprecated: true
      description: Information about the status of the edition of the resource by
        users
    Feedback:
      type: object
      properties:
        comment:
          type: string
          description: Content of the feedback
          example: This datapoint is bad because it was misspelled
        creation:
          type: string
          description: Timestamp when the feedback was submitted
          format: date-time
        userIdentifier:
          type: string
          description: Username of the user that submitted the feedback
          example: someuser
      description: User feedbacks about a datapoint
    Information:
      type: object
      properties:
        type:
          type: string
          description: Type of the processed resource.
          example: SANMX
        subtype:
          type: string
          description: Subtype of the processed resource.
          example: INE
        format:
          type: string
          description: Mime type of the processed document
          example: application/pdf
        language:
          type: string
          description: Language code of the document
          example: SPANSIH
        country:
          type: string
          description: Country of the processed document
          example: Mexico
        size:
          type: integer
          description: Size of the uploaded document in bytes
          format: int64
          example: 1639288
        textExtractor:
          type: string
          description: |-
            OCR text extractor strategy:
            * TEXT: The document was a plain text document
            * PDFBOXEXTRACTOR: The text was extracted from a text pdf file using pdfbox
            * ABBYY: The text was extracted using abbyy ocr
            * COMBINED: The document is a text pdf but was processed using abbyy/tesseract ocr
            * TESSERACT: The text was extracted using tesseract ocr
          example: ABBYY
          enum:
          - TEXT
          - PDFBOXEXTRACTOR
          - ABBYY
          - COMBINED
          - TESSERACT
        validation:
          $ref: '#/components/schemas/Validation'
        edition:
          $ref: '#/components/schemas/Edition'
        processor:
          $ref: '#/components/schemas/Processor'
        path:
          type: string
          description: Importer file uuid for the original document. It's automatically
            generated by the importer module when the system uploads the extracted
            text file
          format: uuid
        licenseId:
          type: integer
          description: Id for the related license for that type of document and client
          format: int64
          example: 1
          deprecated: true
        quoteId:
          type: integer
          description: Id for the related quote for that type of document and client
          format: int64
          example: 1
          deprecated: true
        fileName:
          type: string
          description: Name of the original document uploaded by client
          example: ine.pdf
        md5Hash:
          type: string
          description: Md5 hash of the whole document used to identify it
          example: cbdf2fa13c595cc3a2d94b81785377e7
        uploadDate:
          type: integer
          description: Timestamp when the document was uploaded
          format: int64
          example: 1572957415024
        creator:
          type: string
          description: Username identifying the user that uploaded the document
          example: someuser
        organizationUuid:
          type: string
          description: UUID of the organization the user belongs at the time of the
            upload
          format: uuid
        uploadId:
          type: string
          description: Identifier of a set of documents that were uploaded at the
            same time. Mainly used by UI and status updates
          example: Documents_11/05/2019-13:36:54
        classifier:
          type: boolean
          description: Flag to indicate if the document was classified or not
        corpus:
          type: boolean
          description: Wether the resource is corpus (and therefore stored in the
            corpus index) or a normally processed resource
        transformerOCRFile:
          type: string
          description: Importer file uuid for the ocr transformed document. It's automatically
            generated by the importer module when the system uploads the extracted
            text file
          format: uuid
      description: General metadata about the resource
    Location:
      type: object
      properties:
        start:
          type: integer
          description: |-
            Start of the annotation expressed in milliseconds or characters. For Audio and Txt locations.
            In the audio location it represents the milliseconds from the start of the audio/video.
            In the text location it represents the number of characters from the start.
          format: int64
          example: 19576
        end:
          type: integer
          description: |-
            End of the annotation expressed in milliseconds or characters. For Audio and Txt locations.
            In the audio location it represents the milliseconds from the start of the audio/video.
            In the text location it represents the number of characters from the start.
          format: int64
          example: 21852
        positionImg:
          uniqueItems: true
          type: array
          description: For Image locations. The array of positions specialized in
            the representation of the location used with visual annotations.
          items:
            $ref: '#/components/schemas/PositionImg'
      description: 'The object location that belongs to the LocationType: this object
        has the information about the offsets of the annotations.'
    LocationData:
      type: object
      properties:
        locationId:
          pattern: ^-?\d+$
          type: string
          description: An ID to link with the attribute (Built in this way because
            the location must not be present when the data is sent to third party
            systems)
          example: "136"
        locationType:
          type: string
          description: |-
            The location type needed to select the location objet that fit with resource format:
            * audio - for audios or videos
            * txt - for text
            * img - for Images or PDF
            It could have more types in the future with the specific structure to represent the information.
          example: img
          enum:
          - img
          - txt
          - audio
        parsedText:
          type: string
          description: Parsed text from the location
          example: some text
        location:
          $ref: '#/components/schemas/Location'
      description: Metadata for a specific location
    Origin:
      type: object
      properties:
        originType:
          type: string
          description: 'It represents the information about the method of extraction:
            "manual", "inferred","explicit", ...'
          example: Explicit
          enum:
          - MANUAL
          - INFERRED
          - EXPLICIT
        details:
          type: string
          description: Details about the origin
          example: Faculty 1 is applied to one person because the resource is about
            the constitution of a company and this person is the administrator
      description: Information about the origin of the datapoint
    PositionImg:
      type: object
      properties:
        top:
          type: integer
          description: The top position of the rectangle that marks the annotations
            expressed as pixels
          format: int32
          example: 123
        left:
          type: integer
          description: The left position of the rectangle that marks the annotations
            expressed as pixels
          format: int32
          example: 456
        right:
          type: integer
          description: The right position of the rectangle that marks the annotations
            expressed as pixels
          format: int32
          example: 52
        bottom:
          type: integer
          description: The bottom position of the rectangle that marks the annotations
            expressed as pixels
          format: int32
          example: 1245
        pageNumber:
          type: integer
          description: The page number where the rectangle is located
          format: int32
          example: 2
        pageWidth:
          type: integer
          description: The page width expressed as pixels
          format: int32
          example: 800
        pageHeight:
          type: integer
          description: The page height expressed as pixels
          format: int32
          example: 1400
      description: Details about the position inside the image document
    Processor:
      type: object
      properties:
        processorType:
          type: string
        processorVersion:
          type: integer
          format: int32
      description: (Deprecated on 4.0.0)
      deprecated: true
    Resource:
      type: object
      properties:
        id:
          type: string
          description: Resource id. It's automatically generated in resource manager
            module when generated for the first time
          format: uuid
        information:
          $ref: '#/components/schemas/Information'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Sections'
        locations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LocationData'
        text:
          type: string
          description: Importer file uuid for the extracted text (cleansed if cleanser
            is enabled). It's automatically generated by the importer module when
            the system uploads the extracted text file
          format: uuid
        originalText:
          type: string
          description: Importer file uuid for the originally extracted text (before
            cleanser). It's automatically generated by the importer module when the
            system uploads the extracted text file
          format: uuid
        transformerOcrXml:
          type: string
          description: (Deprecated on 4.0.0) Old ocr xml field that is used no more.
            It's automatically generated by the importer module when the system uploads
            the extracted text file
          format: uuid
          deprecated: true
        ocrXml:
          type: string
          description: Importer file uuid for the originally ocr xml. That XML can
            be the abbyy generated one or an alto XML. It's automatically generated
            by the importer module when the system uploads the extracted text file
          format: uuid
        gethOCR:
          type: string
          description: Importer file uuid for the tesseract OCR xml. It's automatically
            generated by the importer module when the system uploads the extracted
            text file
          format: uuid
        gateXml:
          type: string
          description: Importer file uuid for the gate xml. It's automatically generated
            by the importer module when the system uploads the extracted text file
          format: uuid
        ocrCleansedTxtRef:
          type: string
          description: Importer file uuid for the cleansed text. It's automatically
            generated by the importer module when the system uploads the extracted
            text file
          format: uuid
        ocrCleanserSuggestionsRef:
          type: string
          description: (Deprecated on 4.0.0) Importer file uuid for ocrCleanserSuggestionsRef.
            It's automatically generated by the importer module when the system uploads
            the extracted text file
          format: uuid
          deprecated: true
        originalTokens:
          type: string
          description: |-
            Original text for tokens corrected by cleanser.
             * Key: Token offset
             * Value: Original texts before applying the corections.
             Stored as a serialized map encoded in base64
          format: base64
          example: eyIyMDA2NSI6IkZSQUdPU08iLCIxMTMzMyI6IkZSQUdPU08iLCIyMzkxMCI6IkZSQUdPU08iLCIyNTkyOCI6IkZSQUdPU08iLCI4NjgzIjoiRlJBR09TTyIsIjI4MTExIjoiRlJBR09TTyIsIjE2NDgiOiJGUkFHT1NPIiwiMzYwMSI6IkZSQUdPU08iLCI2NDUyIjoiRlJBR09TTyIsIjEzNDkyIjoiRlJBR09TTyIsIjg2IjoiRlJBR09TTyIsIjM5NzAyIjoiRlJBR09TTyIsIjM3ODQ4IjoiRlJBR09TTyIsIjQyMjY0IjoiRlJBR09TTyIsIjIxOTQ2IjoiRlJBR09TTyIsIjQ0MTI3IjoiRlJBR09TTyJ9
        status:
          type: integer
          description: |-
            Informs wether the processing went all right or there was an error.
            Valid values are:
            * 0 = Incorrect - There was a processing error
            * 1 = Correct - Processing finished successfully
            * 2 = Cancelled
          format: int32
          example: 0
        errorStatusUpload:
          type: integer
          description: StatusUpload when an error occured. Possible values are the
            same as defined in the statusUpload field specification
          format: int32
          nullable: true
          example: 2
        operation:
          type: string
          description: Operation id. An operation defines a set of document to be
            consolidated after all of them finished processing.
        validationDate:
          type: string
          description: Timestamp with the date the resource was validated
          format: date-time
          nullable: true
        error:
          $ref: '#/components/schemas/ResultError'
        textPlain:
          type: object
          additionalProperties:
            type: string
            description: |-
              Contains the plain text to allow searching over it using imatch search service.
              In order to allow different language contents, the field has a structure of key:value pairs.
              * key: language code
              * value: plain text content

              Example: {"ENGLISH": "This is the extracted text in english."}
          description: |-
            Contains the plain text to allow searching over it using imatch search service.
            In order to allow different language contents, the field has a structure of key:value pairs.
            * key: language code
            * value: plain text content

            Example: {"ENGLISH": "This is the extracted text in english."}
        consolidations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DatapointConsolidationResult'
        warningCode:
          type: integer
          description: Warning code if there is something to warn about. Default is
            -1 meaning there is no warning
          format: int32
          default: -1
        warningMessage:
          type: string
          description: Waring message matching the warning code
          nullable: true
        classified:
          type: boolean
          description: Flag to indicate if the document was classified or not
        normalizationError:
          type: string
          description: Description of the normalization error if any
        status_upload:
          type: integer
          description: |-
            Status of the processing
            Valid values are tthe following:
            * 0: Uploading - The document has been received and is being prepared for processing
            * 1: Saving file - The document is being stored
            * 2: OCR - OCR process
            * 3: Saving transcription - OCR extracted text is being stored
            * 4: Saving OCR XML - OCR xml is being stored
            * 5: (Deprecated) Saving transformed OCR XML - OCR transformed xml is being stored
            * 6: Saving transformed file - OCR transformed pdf is being stored
            * 7: NLP process - NLP datapoint straction process
            * 8: Merge OCR - Locations extraction
            * 9: Calculating confidence - Extracted datapoints confidence value calculation
            * 10: Cleanser process - Text cleansing process
            * 11: Classifying - Document classification
            * 12: Signature Extraction
            * 13: Normalizing
            * 14: Vertical code detection - Detection of verttical text
            * 999: Finished - The processing has ended eithter successfully or due to errors
          format: int32
          example: 999
        status_corpus:
          type: integer
          description: |-
            Status of the corpus edition
            Valid values are the following:
            * 0: Not edited - The document has not been modified
            * 1: In progress - The document has been modified and saved as draft
            * 2: Validated - The document has been modified and validated
          format: int32
          example: 0
      description: The main resource that contains all the information about the extraction
        process
    ResultError:
      type: object
      properties:
        errorCode:
          pattern: ^\d{4}-\d{3}$
          type: string
          description: |-
            Error code. The error codes are formed with the following structure:
            <service code>-<specific error code>
            For example: 8002-404 means there was an error in pipeline executor (8002) caused by an resource manager not found (404)
          example: 8002-404
        errorCodeDescription:
          type: string
          description: Description of the error occured
          deprecated: true
        errorDesc:
          type: string
          description: Description of the error occured
          example: Resource manager service not found
        developerMessage:
          type: string
          description: Additional information about the error. May contain stack traces
            if no other information is explicitly provided
          example: The resource manager returned a 503 error
          deprecated: true
        moreInfo:
          type: string
          description: Additional information about the error. May contain stack traces
            if no other information is explicitly provided
          example: The resource manager returned a 503 error
      description: Information about an error if any occured
      nullable: true
    Sections:
      type: object
      properties:
        label:
          type: string
          description: Unique id of the section to allow diferentiation beetween sections
            with the same label
          format: uuid
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        id:
          type: string
          description: Unique id of the section to allow diferentiation beetween sections
            with the same label
          format: uuid
      description: Recursive structure that stores the resource datapoints
    Validation:
      type: object
      properties:
        validationType:
          type: string
          description: 'What kind of OCR validation was used in the processing of
            the resource: "Text": The document was a txt and no validation is needed."Text
            Pdf": The document was a text pdf and only suspiciousness may apply."Image":
            The document was an image or a pdf with embedded images. Dpi and suspiciousness
            validation may apply.'
          example: Text Pdf
        valid:
          type: boolean
          description: Boolean flag to indicate that the resource is validated
          example: true
          default: false
        confidence:
          maximum: 1
          minimum: 0
          type: number
          description: Value of confidence that the resource datapoints are correct.
            From 0 to 1
          format: double
          example: 0.9
        slaValue:
          type: number
          description: Value of the calculated confidence
          format: float
          deprecated: true
        slaThreshold:
          type: number
          description: Value of the contract confidence sla
          format: float
          deprecated: true
        supervised:
          type: boolean
          description: Boolean flag to indicate that the document is supervised (aka.
            not structured)
        slaCompliant:
          type: boolean
          description: Boolean flag to indicate thatt the document reaches the contract
            defined sla threshold
          example: true
        slaSupervisedExplicitDatapoint:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        slaSupervisedInferedDatapoint:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        slaLowerThreshold:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        slaNotSupervisedDocument:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        slaNotSupervisedDatapoint:
          type: number
          description: (Deprecated on 4.0.0)
          format: float
          deprecated: true
        dpi:
          minimum: 0
          type: integer
          description: Dots Per Inch. A measure of the resolution of the document
            if it contains images
          format: int32
          example: 260
        pages:
          minimum: 0
          type: integer
          description: Number of pages in the document
          format: int32
          example: 5
        rejectReason:
          type: string
          description: |-
            Reason why the document was rejected by OCR
            * DPI - calculated dpi value is lower than the threshold
            * SUSP - calculated suspicious rate value is lower than the threshold
          nullable: true
          example: DPI
        supervision:
          type: string
          description: |-
            Status of the supervision of a resource.
            * V = Validated
            * E = Edited
          nullable: true
          example: null
          default: null
        mobile:
          type: boolean
          description: Boolean flag to indicate that the doocument is a photograph
        suspicious_rate:
          maximum: 1
          minimum: 0
          type: number
          description: Percentage of suspicius characters in the extracted text. A
            suspicious character is a character that has a low confidence to have
            been correctly extracted by OCR
          format: float
          example: 0.48
      description: Metadata about the OCR validation of the resource
    Values:
      type: object
      properties:
        normalizeValue:
          type: string
          description: Value after normalization. This is the value that is shown
            in UI and that should be used as final value
          example: Paco
        markCorrection:
          type: boolean
          description: Flag that if true indicates that the datapoint that has been
            edited must be saved as correction for cleanser training
          nullable: true
        originalValue:
          type: string
          description: Original datapoint value before normalizations or editions
          example: Fransisco
        originalNormalizeValue:
          type: string
          description: Datapoint value before a user edition. That way you can compaer
            and see what changed
          example: Francisco
        forwardContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        backwardContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        surroundContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        oneWordAfterContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        lineForwardContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
        lineBackwardContext:
          type: string
          description: (Deprecated on 4.0.0)
          deprecated: true
      description: Actual value, old values and other metadata about the attribute
    AttributeDTO:
      type: object
      properties:
        key:
          type: string
        feedbacks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Feedback'
        value:
          type: string
        consolidationIdentifier:
          type: string
        confidence:
          type: number
          format: double
        editedBy:
          type: string
        editedDate:
          type: string
          format: date-time
        origin:
          $ref: '#/components/schemas/Origin'
    InformationDTO:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        format:
          type: string
        language:
          type: string
        country:
          type: string
        validation:
          $ref: '#/components/schemas/ValidationDTO'
        fileName:
          type: string
        uploadDate:
          type: integer
          format: int64
        creator:
          type: string
        path:
          type: string
    ResourceDTO:
      type: object
      properties:
        id:
          type: string
        information:
          $ref: '#/components/schemas/InformationDTO'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionsDTO'
        status:
          type: integer
          format: int32
        status_upload:
          type: integer
          format: int32
        operation:
          type: string
        error:
          $ref: '#/components/schemas/ResultErrorDTO'
        consolidations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DatapointConsolidationResult'
    ResultErrorDTO:
      type: object
      properties:
        errorCode:
          type: string
        errorDesc:
          type: string
    SectionsDTO:
      type: object
      properties:
        label:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeDTO'
        children:
          type: array
          items:
            $ref: '#/components/schemas/SectionsDTO'
        id:
          type: string
    ValidationDTO:
      type: object
      properties:
        validationType:
          type: string
        valid:
          type: boolean
        dpi:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
        rejectReason:
          type: string
        mobile:
          type: boolean
        suspicious_rate:
          type: number
          format: float
    ScrollResponse:
      type: object
      properties:
        scroll:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
    Status:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        message:
          type: string
    OcrParamDescription:
      type: object
      properties:
        name:
          type: string
          description: Name of parameter.
          example: isEmail
        description:
          type: string
          description: Description of the parameter.
          example: This parameter will be evaluated for (in positive case) email extraction
            processing
        type:
          type: string
          description: Datatype.
          example: BOOLEAN
          enum:
          - STRING
          - FLOAT
          - INTEGER
          - SELECT
          - BOOLEAN
          - MULTIPLE
        options:
          type: array
          description: List of selectable values.
          example:
          - defaultExtractor
          - layout
          - improvedLayout
          items:
            type: string
            description: List of selectable values.
            example: '["defaultExtractor","layout","improvedLayout"]'
        required:
          type: boolean
          description: Enable if a value is required.
        value:
          type: object
          description: The value of the param. Any object is acceptable.
        min:
          type: number
          description: Min value in case the param is a number.
          format: float
          example: 1.0
        max:
          type: number
          description: Max value in case the param is a number.
          format: float
          example: 10.0
        step:
          type: number
          description: Step between values in a row in case the param is a number.
          format: float
          example: 2.0
      description: OCR configuration parameter details.
    OcrParamNodeDescription:
      type: object
      properties:
        name:
          type: string
          description: Name of parameter.
          example: isEmail
        description:
          type: string
          description: Description of the parameter.
          example: This parameter will be evaluated for (in positive case) email extraction
            processing
        type:
          type: string
          description: Datatype.
          example: BOOLEAN
          enum:
          - STRING
          - FLOAT
          - INTEGER
          - SELECT
          - BOOLEAN
          - MULTIPLE
        options:
          type: array
          description: List of selectable values.
          example:
          - defaultExtractor
          - layout
          - improvedLayout
          items:
            type: string
            description: List of selectable values.
            example: '["defaultExtractor","layout","improvedLayout"]'
        required:
          type: boolean
          description: Enable if a value is required.
        value:
          type: object
          description: The value of the param. Any object is acceptable.
        min:
          type: number
          description: Min value in case the param is a number.
          format: float
          example: 1.0
        max:
          type: number
          description: Max value in case the param is a number.
          format: float
          example: 10.0
        step:
          type: number
          description: Step between values in a row in case the param is a number.
          format: float
          example: 2.0
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/OcrParamNodeDescription'
    OcrParamsDescription:
      required:
      - country
      - id
      - language
      - subtype
      - type
      type: object
      properties:
        id:
          type: string
          description: Document configuration ID
          example: SeguridadSocial
        type:
          type: string
          description: Document type
          example: SeguridadSocial
        subtype:
          type: string
          description: Document subtype
          example: notasimple
        country:
          type: string
          description: Document country
          example: España
        language:
          type: string
          description: Document language
          example: SPANISH
        isEmail:
          $ref: '#/components/schemas/OcrParamDescription'
        textExtractionStrategy:
          $ref: '#/components/schemas/OcrParamDescription'
        pdfboxStripper:
          $ref: '#/components/schemas/OcrParamDescription'
        dpiThreshold:
          $ref: '#/components/schemas/OcrParamDescription'
        forceResize:
          $ref: '#/components/schemas/OcrParamDescription'
        suspiciousThreshold:
          $ref: '#/components/schemas/OcrParamDescription'
        pdfTextToImage:
          $ref: '#/components/schemas/OcrParamDescription'
        pdfBoxTextExtraction:
          $ref: '#/components/schemas/OcrParamDescription'
        joinTables:
          $ref: '#/components/schemas/OcrParamDescription'
        cropMargins:
          $ref: '#/components/schemas/OcrParamDescription'
        processor:
          $ref: '#/components/schemas/OcrParamDescription'
        rotateVerticalText:
          $ref: '#/components/schemas/OcrParamDescription'
        extendTables:
          $ref: '#/components/schemas/OcrParamDescription'
        tesseractConfig:
          $ref: '#/components/schemas/OcrParamNodeDescription'
        finereaderConfig:
          $ref: '#/components/schemas/OcrParamNodeDescription'
        cleanserStrategy:
          $ref: '#/components/schemas/OcrParamNodeDescription'
        documentConversionConfig:
          $ref: '#/components/schemas/OcrParamNodeDescription'
    ComputerVisionModuleConfiguration:
      type: object
      properties:
        name:
          type: string
          description: Human readable name of the configuration.
        configuration:
          type: object
          additionalProperties:
            type: string
            description: Dictionary with the configuration of the computer vision
              process.
          description: Dictionary with the configuration of the computer vision process.
      description: Entity that represent the configuration for the computer vision
        processing in a doctypeConfiguration.
    DocTypeConfiguration:
      type: object
      properties:
        id:
          type: string
          description: Identifier for the document configuration
        type:
          type: string
          description: The type of the document. The id will correspond with this
            value
        subtype:
          type: string
          description: The subtype of the document.
        country:
          type: string
          description: The country for this document configuration.
        language:
          type: string
          description: The language for this document configuration.
        classifierType:
          type: string
          description: The id used to be identified for the prediction model (classifier)
          nullable: true
        extractionStrategy:
          type: string
          description: |-
            Extraction strategy for this configuration of document:
            - GRAMMAR: Type of extraction by matching regular expressions through Gate.
            - HYBRID: Mixes grammar extraction with other extraction ways based on ML or position matching.
            - ONTOLOGY: Deprecated from 4.x version.
            - KEY_VALUE: Based on training statistical models to predict values for specific keys.
            - SDK: Extraction which uses the Taiger Cognitive ML models to determine the outputs.
          enum:
          - GRAMMAR
          - HYBRID
          - ONTOLOGY
          - KEY_VALUE
          - SDK
        calculateLocations:
          type: boolean
          description: If enabled, it will indicate to the processing workflow to
            calculate the position of the extracted values on the source.
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
        filesToKeep:
          type: array
          description: |-
            List of files to keep:
            - ORIGINAL_DOCUMENT: The source file to process.
            - POST_PROCESSING_TEXT: Text generated by the processing step in the processing workflow.
            - XML_OCR: XML generated by the OCR.
            - XML_GATE: XML generated by Gate.
            - TRANSFORMER_ORIGINAL_DOCUMENT: Transformed original document.
            - HOCR: XML generated by Tesseract with the result of the OCR recognition.
          items:
            type: string
            description: |-
              List of files to keep:
              - ORIGINAL_DOCUMENT: The source file to process.
              - POST_PROCESSING_TEXT: Text generated by the processing step in the processing workflow.
              - XML_OCR: XML generated by the OCR.
              - XML_GATE: XML generated by Gate.
              - TRANSFORMER_ORIGINAL_DOCUMENT: Transformed original document.
              - HOCR: XML generated by Tesseract with the result of the OCR recognition.
            enum:
            - ORIGINAL_DOCUMENT
            - POST_PROCESSING_TEXT
            - XML_OCR
            - XML_GATE
            - TRANSFORMER_ORIGINAL_DOCUMENT
            - HOCR
        processComputerVision:
          type: boolean
          description: Indicates if the computer vision service is required.
        computerVisionModules:
          type: array
          description: List with the computer vision modules to apply in this configuration.
          example:
          - signature_extractor
          - vertical_ife
          items:
            type: string
            description: List with the computer vision modules to apply in this configuration.
            example: '["signature_extractor","vertical_ife"]'
        computerVisionConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ComputerVisionModuleConfiguration'
        verificationThreshold:
          maximum: 1.0
          exclusiveMaximum: false
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Value between 0.0 and 1.0 that indicates the threshold to consider
            it a processable document.
        fileSampling:
          maximum: 100
          minimum: 0
          type: integer
          description: Probability of a generated file to be kept (values between
            0 and 100).
          format: int32
      description: Entity which contains all the information related with the configuration
        set for a document typology.It's uniqueness is determined for its id or by
        type + subtype + country + language
    Section:
      type: object
      properties:
        label:
          type: string
          description: Unique id of the section to allow diferentiation beetween sections
            with the same label
          format: uuid
        description:
          type: string
          description: Description of the datapoint.
          nullable: true
        featureName:
          type: string
          description: Feature name of the datapoint.
          nullable: true
        mandatory:
          type: boolean
          description: Indicates if this datapoint is mandatory.
        multiple:
          type: boolean
          description: Indicates if the datapoint is an array.
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        children:
          type: array
          items:
            $ref: '#/components/schemas/Section'
      description: Recursive structure to define the document configuration datapoints.
    Document:
      type: object
      properties:
        type:
          type: string
          description: The type of the document.
          example: The name of the company or institution
        subtype:
          type: string
          description: The subtype of the document.
          example: Passport
        country:
          type: string
          description: The country of the document.
          example: Singapore
        language:
          type: string
          description: The language of the document.
          example: English
      description: Entity which contains the information of a document.
    ContentDisposition:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        filename:
          type: string
        charset:
          type: object
          properties:
            registered:
              type: boolean
        size:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        readDate:
          type: string
          format: date-time
    HttpHeaders:
      type: object
      properties:
        all:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
        lastModified:
          type: integer
          format: int64
        date:
          type: integer
          format: int64
        contentLength:
          type: integer
          format: int64
        contentType:
          $ref: '#/components/schemas/MediaType'
        ifModifiedSince:
          type: integer
          format: int64
        accessControlRequestMethod:
          type: string
          enum:
          - GET
          - HEAD
          - POST
          - PUT
          - PATCH
          - DELETE
          - OPTIONS
          - TRACE
        acceptCharset:
          type: array
          items:
            type: object
            properties:
              registered:
                type: boolean
        allow:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - GET
            - HEAD
            - POST
            - PUT
            - PATCH
            - DELETE
            - OPTIONS
            - TRACE
        bearerAuth:
          type: string
          writeOnly: true
        cacheControl:
          type: string
        connection:
          type: array
          items:
            type: string
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        contentLanguage:
          type: object
          properties:
            displayName:
              type: string
            script:
              type: string
            country:
              type: string
            variant:
              type: string
            extensionKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleAttributes:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            iso3Language:
              type: string
            iso3Country:
              type: string
            displayLanguage:
              type: string
            displayScript:
              type: string
            displayCountry:
              type: string
            displayVariant:
              type: string
            language:
              type: string
        etag:
          type: string
        expires:
          type: integer
          format: int64
        ifMatch:
          type: array
          items:
            type: string
        ifNoneMatch:
          type: array
          items:
            type: string
        ifUnmodifiedSince:
          type: integer
          format: int64
        origin:
          type: string
        pragma:
          type: string
        range:
          type: array
          items:
            $ref: '#/components/schemas/HttpRange'
        upgrade:
          type: string
        vary:
          type: array
          items:
            type: string
        location:
          type: string
          format: uri
        host:
          type: object
          properties:
            hostString:
              type: string
            address:
              type: object
              properties:
                canonicalHostName:
                  type: string
                multicastAddress:
                  type: boolean
                anyLocalAddress:
                  type: boolean
                loopbackAddress:
                  type: boolean
                linkLocalAddress:
                  type: boolean
                siteLocalAddress:
                  type: boolean
                mcglobal:
                  type: boolean
                mcnodeLocal:
                  type: boolean
                mclinkLocal:
                  type: boolean
                mcsiteLocal:
                  type: boolean
                mcorgLocal:
                  type: boolean
                hostAddress:
                  type: string
                address:
                  type: array
                  items:
                    type: string
                    format: byte
                hostName:
                  type: string
            port:
              type: integer
              format: int32
            unresolved:
              type: boolean
            hostName:
              type: string
        accept:
          type: array
          items:
            $ref: '#/components/schemas/MediaType'
        acceptLanguage:
          type: array
          items:
            type: object
            properties:
              range:
                type: string
              weight:
                type: number
                format: double
        acceptLanguageAsLocales:
          type: array
          items:
            type: object
            properties:
              displayName:
                type: string
              script:
                type: string
              country:
                type: string
              variant:
                type: string
              extensionKeys:
                uniqueItems: true
                type: array
                items:
                  type: string
              unicodeLocaleAttributes:
                uniqueItems: true
                type: array
                items:
                  type: string
              unicodeLocaleKeys:
                uniqueItems: true
                type: array
                items:
                  type: string
              iso3Language:
                type: string
              iso3Country:
                type: string
              displayLanguage:
                type: string
              displayScript:
                type: string
              displayCountry:
                type: string
              displayVariant:
                type: string
              language:
                type: string
        accessControlAllowCredentials:
          type: boolean
        accessControlAllowHeaders:
          type: array
          items:
            type: string
        accessControlAllowMethods:
          type: array
          items:
            type: string
            enum:
            - GET
            - HEAD
            - POST
            - PUT
            - PATCH
            - DELETE
            - OPTIONS
            - TRACE
        accessControlAllowOrigin:
          type: string
        accessControlExposeHeaders:
          type: array
          items:
            type: string
        accessControlMaxAge:
          type: integer
          format: int64
        accessControlRequestHeaders:
          type: array
          items:
            type: string
        empty:
          type: boolean
      additionalProperties:
        type: array
        items:
          type: string
    HttpRange:
      type: object
    MediaType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        qualityValue:
          type: number
          format: double
        charset:
          type: object
          properties:
            registered:
              type: boolean
        wildcardType:
          type: boolean
        wildcardSubtype:
          type: boolean
        concrete:
          type: boolean
    Operation:
      type: object
      properties:
        id:
          type: string
        resources:
          type: array
          items:
            type: string
        size:
          type: integer
          format: int32
    TimeTrace:
      type: object
      properties:
        id:
          type: string
          description: Identifier of timetrace (UUID).
          format: UUID
          example: c9c7e7ed-887b-4156-a79e-35e3a0ed8d58
        resourceid:
          type: string
          description: Identifier of associated resource (UUID).
          format: UUID
          example: 84fe7b49-b105-4d29-b14f-26e2d5db92dd
        start:
          type: string
          description: Timestamp with of the process beginning (epoch format).
          format: date-time
        end:
          type: string
          description: Timestamp with of the process ending (epoch format).
          format: date-time
        processingTime:
          type: integer
          description: Duration of the process (epoch format).
          format: int64
          example: 5433
        process:
          type: string
          description: Name of the process.
          example: pipeline.nlp-pipeline-service.call
      description: Timetrace structure
    ProfileInfoResponse:
      type: object
      properties:
        activeProfiles:
          type: array
          items:
            type: string
        ribbonEnv:
          type: string
  securitySchemes:
    bearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
